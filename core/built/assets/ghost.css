/* Stop: Normalize.
/* ---------------------------------------------------------- */

/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */

/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */

html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */

audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */

[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * Remove the gray background color from active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */

a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */

abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */

b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */

dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */

mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove border when inside `a` element in IE 8/9/10.
 */

img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * Address margin not present in IE 8/9 and Safari.
 */

figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */

hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */

pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */

/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */

button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */

button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */

input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */

textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */

optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* Patterns: Groups of Styles
/* ---------------------------------------------------------- */

/* Global styles
/* ---------------------------------------------------------- */

/* Variables
/* ---------------------------------------------------------- */

:root {
  /* Colours */
  /* Style values */
  /* TODO: not used? */
}

/* Layout
/* ---------------------------------------------------------- */

*,
*:before,
*:after {
  box-sizing: border-box;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

html {
  overflow: hidden;
  width: 100%;
  /* Prevent elastic scrolling on the whole page */
  height: 100%;
  font: 62.5%/1.65 "Open Sans", sans-serif;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

body {
  overflow: auto;
  overflow-x: hidden;
  width: 100%;
  /* Prevent elastic scrolling on the whole page */
  height: 100%;
  color: lighten(#242628, 10%);
  font-size: 1.4rem;
}

::-moz-selection {
  background: lighten(#5ba4e5, 20%);
}

::selection {
  background: lighten(#5ba4e5, 20%);
}

/* Text
/* ---------------------------------------------------------- */

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0 0 0.3em 0;
  color: #242628;
  line-height: 1.15em;
  text-rendering: optimizeLegibility;
}

h1 {
  text-indent: -1px;
  font-size: 5rem;
}

h2 {
  text-indent: -1px;
  font-size: 4.2rem;
}

h3 {
  font-size: 3.8rem;
}

h4 {
  font-size: 3.1rem;
}

h5 {
  font-size: 2.8rem;
}

h6 {
  font-size: 2.2rem;
}

p,
ul,
ol,
dl {
  margin: 0 0 1.7em 0;
}

ol,
ul {
  padding-left: 2.5em;
}

ol ol,
ul ul,
ul ol,
ol ul {
  margin: 0 0 0.4em 0;
  padding-left: 2em;
  font-size: 0.9em;
}

mark {
  background-color: #fdffb6;
}

a {
  color: #5ba4e5;
  text-decoration: none;
  transition: background 0.3s, color 0.3s;
}

a:hover {
  text-decoration: none;
  transition: background 0.1s, color 0.1s;
}

a.highlight {
  color: #f2a925;
  font-weight: bold;
}

hr {
  display: block;
  margin: 3.2em 0;
  padding: 0;
  height: 1px;
  border: 0;
  border-top: 1px solid #e1e1e1;
}

dl {
  margin: 1.6em 0;
}

dl dt {
  float: left;
  clear: left;
  overflow: hidden;
  margin-bottom: 1em;
  width: 180px;
  text-align: right;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-weight: bold;
}

dl dd {
  margin-bottom: 1em;
  margin-left: 200px;
}

blockquote {
  margin: 1.6em 0;
  padding: 0 1.6em 0 1.6em;
  border-left: #e1e1e1 0.6em solid;
}

blockquote p {
  margin: 0.8em 0;
  font-size: 1.2em;
  font-weight: 300;
}

blockquote small {
  display: inline-block;
  margin: 0.8em 0 0.8em 1.5em;
  color: #aaa9a2;
  font-size: 0.9em;
}

/* Quotation marks */

blockquote small:before {
  content: "\2014 \00A0";
}

blockquote cite {
  font-weight: bold;
}

blockquote cite a {
  font-weight: normal;
}

.markdown,
pre,
code,
tt {
  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
}

code,
tt {
  padding: 0.2em 0.4em;
  background: lighten(#e1e1e1, 2%);
  border-radius: 2px;
  vertical-align: top;
  white-space: pre-wrap;
  font-size: 0.85em;
}

pre {
  overflow: auto;
  margin: 1.6em 0;
  padding: 10px;
  width: 100%;
  background: lighten(#e1e1e1, 2%);
  border-radius: 3px;
  white-space: pre;
  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
  font-size: 0.9em;
}

pre code,
pre tt {
  padding: 0;
  border: none;
  background: transparent;
  white-space: pre-wrap;
  font-size: inherit;
}

kbd {
  display: inline-block;
  margin-bottom: 0.4em;
  padding: 1px 8px;
  border: #ccc 1px solid;
  background: #f4f4f4;
  border-radius: 4px;
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2),
    0 1px 0 0 #fff inset;
  color: #242628;
  text-shadow: #fff 0 1px 0;
  font-size: 0.9em;
  font-weight: bold;
}

button {
  padding: 0;
  outline: none;
  border: none;
  background: transparent;
  box-shadow: none;
}

img {
  max-width: 100%;
}

/* Utilities
/* ---------------------------------------------------------- */

.clearfix,
.clearfix:after {
  content: "";
  display: table;
  clear: both;
}

.wrapper {
  position: relative;
}

.show {
  display: block !important;
}

.hidden {
  visibility: hidden !important;
  display: none !important;
}

.invisible {
  visibility: hidden;
}

.sr-only {
  position: absolute;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  border: 0;
}

.sr-only:active,
.sr-only:focus {
  position: static;
  overflow: visible;
  clip: auto;
  margin: 0;
  width: auto;
  height: auto;
}

.right {
  float: right;
}

.left {
  float: left;
}

.vertical {
  display: table-cell;
  vertical-align: middle;
}

/* Animations
/* ---------------------------------------------------------- */

@-webkit-keyframes fade-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@-webkit-keyframes fade-in-snap {
  to {
    opacity: 1;
  }
}

@keyframes fade-in-snap {
  to {
    opacity: 1;
  }
}

@-webkit-keyframes fade-in-scale {
  from {
    opacity: 0;
    -webkit-transform: scale(0.95);
    transform: scale(0.95);
  }

  to {
    opacity: 1;
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}

@keyframes fade-in-scale {
  from {
    opacity: 0;
    -webkit-transform: scale(0.95);
    transform: scale(0.95);
  }

  to {
    opacity: 1;
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}

@-webkit-keyframes fade-out {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@keyframes fade-out {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@-webkit-keyframes keyboard-focus-style-fade-out {
  from {
    box-shadow: inset 0 0 30px 1px lighten(#7d878a, 20%);
  }

  to {
    box-shadow: none;
  }
}

@keyframes keyboard-focus-style-fade-out {
  from {
    box-shadow: inset 0 0 30px 1px lighten(#7d878a, 20%);
  }

  to {
    box-shadow: none;
  }
}

.fade-in {
  -webkit-animation: fade-in 0.2s;
  animation: fade-in 0.2s;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

.fade-in-scale {
  -webkit-animation: fade-in-scale 0.2s;
  animation: fade-in-scale 0.2s;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

.fade-out {
  -webkit-animation: fade-out 0.5s;
  animation: fade-out 0.5s;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

/* Shame
/* ---------------------------------------------------------- */

/* TODO: Kill with fire */

/* Animations
/* ---------------------------------------------------------- */

/* Semi-opaque fixed-position headers - used on content/editor */

.floatingheader {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  z-index: 400;
  padding: 10px 20px;
  height: 40px;
  background: linear-gradient(to bottom, white 0%, white 25%, rgba(255, 255, 255, 0.9) 100%);
  color: #aaa9a2;
  text-transform: uppercase;
  font-size: 1.3rem;
  /*Transparent gradient to make bg fade out as it goes out the top */
}

.floatingheader .button {
  display: inline-block;
  padding: 3px 4px;
  min-height: 20px;
  height: 20px;
  vertical-align: top;
  font-size: 10px;
}

.floatingheader .button.button-back {
  position: relative;
  top: -2px;
  left: 3px;
  display: none;
  padding: 0 6px 0 3px;
}

.floatingheader .button.button-back:active {
  box-shadow: none;
}

.floatingheader .button.button-back:before {
  left: -8px;
  border-width: 10px 8px 10px 0;
}

@media (max-width: 900px) {
  .floatingheader .button.button-back {
    display: inline-block;
  }
}

.floatingheader small {
  font-size: 0.85em;
}

.floatingheader a,
.floatingheader button {
  color: #aaa9a2;
}

.floatingheader a:hover,
.floatingheader button:hover {
  color: #242628;
}

/* Scroll shadows
/* ---------------------------------------------------------- */

.scrolling .floatingheader {
  box-shadow: rgba(0, 0, 0, 0.03) 0 1px 3px;
}

.scrolling .floatingheader:before {
  content: "";
  position: absolute;
  bottom: -5px;
  left: 50%;
  z-index: -1;
  margin-left: -40%;
  width: 80%;
  height: 5px;
  background-image: radial-gradient(ellipse at center, rgba(0, 0, 0, 0.05) 0%, transparent 75%, transparent 100%);
  background-position: 0 -5px;
  background-size: 100% 200%;
}

/* Icons
/* ---------------------------------------------------------- */

@font-face {
  font-family: "ghosticons";
  font-weight: normal;
  font-style: normal;
  src: url("fonts/ghosticons.eot");
  src: url("fonts/ghosticons.eot?#iefix") format("embedded-opentype"),
    url("fonts/ghosticons.woff") format("woff"),
    url("fonts/ghosticons.ttf") format("truetype"),
    url("fonts/ghosticons.svg#ghosticons") format("svg");
}

[data-icon]:before {
  content: attr(data-icon);
  text-transform: none !important;
  font-family: "ghosticons" !important;
  line-height: 1;
  font-weight: normal !important;
  font-style: normal !important;
  -webkit-font-feature-settings: normal,;
  font-feature-settings: normal,;
  font-variant: normal !important;
  speak: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

[class^="icon-"]:before,
[class*=" icon-"]:before {
  text-transform: none !important;
  font-family: "ghosticons" !important;
  line-height: 1;
  font-weight: normal !important;
  font-style: normal !important;
  -webkit-font-feature-settings: normal,;
  font-feature-settings: normal,;
  font-variant: normal !important;
  speak: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icon-user:before {
  content: "\e000";
}

.icon-search:before {
  content: "\e001";
}

.icon-design:before {
  content: "\e003";
}

.icon-content:before {
  content: "\e004";
}

.icon-x:before {
  content: "\e005";
}

.icon-add:before {
  content: "\e006";
}

.icon-apps:before {
  content: "\e007";
}

.icon-settings:before {
  content: "\e008";
}

.icon-front-end:before {
  content: "\e00a";
}

.icon-dash:before {
  content: "\e00b";
}

.icon-tag:before {
  content: "\e009";
}

.icon-compass:before {
  content: "\e002";
}

.icon-code:before {
  content: "\e00c";
}

.icon-team:before {
  content: "\e00d";
}

.icon-idea:before {
  content: "\e00e";
}

.icon-arrow:before {
  content: "\e00f";
}

.icon-pen:before {
  content: "\e010";
}

.icon-clip:before {
  content: "\e011";
}

.icon-trash:before {
  content: "\e012";
}

.icon-edit:before {
  content: "\e013";
}

.icon-new:before {
  content: "\e014";
}

.icon-lock:before {
  content: "\e015";
}

.icon-link:before {
  content: "\e016";
}

.icon-chat:before {
  content: "\e017";
}

.icon-smiley:before {
  content: "\e018";
}

.icon-star:before {
  content: "\e019";
}

.icon-rss:before {
  content: "\e01b";
}

.icon-hotspot:before {
  content: "\e01d";
}

.icon-mail:before {
  content: "\e01e";
}

.icon-sound-on:before {
  content: "\e01f";
}

.icon-sound-off:before {
  content: "\e020";
}

.icon-download:before {
  content: "\e021";
}

.icon-upload:before {
  content: "\e022";
}

.icon-bell:before {
  content: "\e023";
}

.icon-shop:before {
  content: "\e01c";
}

.icon-box:before {
  content: "\e024";
}

.icon-connections:before {
  content: "\e025";
}

.icon-arrow-right:before {
  content: "\e01a";
}

.icon-arrow-left:before {
  content: "\e026";
}

.icon-arrow-up:before {
  content: "\e027";
}

.icon-ghost:before {
  content: "\e028";
}

.icon-dice:before {
  content: "\e029";
}

.icon-ambulance:before {
  content: "\e02a";
}

.icon-calendar:before {
  content: "\e02b";
}

.icon-folder:before {
  content: "\e02c";
}

.icon-pulse:before {
  content: "\e02d";
}

.icon-photos:before {
  content: "\e02e";
}

.icon-legal:before {
  content: "\e02f";
}

.icon-letter:before {
  content: "\e030";
}

.icon-grid:before {
  content: "\e031";
}

.icon-list:before {
  content: "\e032";
}

.icon-blog:before {
  content: "\e033";
}

.icon-question:before {
  content: "\e034";
}

.icon-error:before {
  content: "\e035";
}

.icon-power:before {
  content: "\e036";
}

.icon-markdown:before {
  content: "\e037";
}

.icon-external:before {
  content: "\e038";
}

.icon-arrow2:before {
  content: "\e039";
}

.icon-arrow2-up:before {
  content: "\e03a";
}

.icon-arrow2-left:before {
  content: "\e03b";
}

.icon-arrow2-right:before {
  content: "\e03c";
}

.icon-x2:before {
  content: "\e03d";
}

.icon-gh:before {
  content: "\e03e";
}

.icon-signout:before {
  content: "\e036";
}

.icon-minimise:before {
  content: "\e03f";
}

.icon-maximise:before {
  content: "\e040";
}

.icon-book:before {
  content: "\e041";
}

.icon-twitter:before {
  content: "\e042";
}

/* Forms
/* ---------------------------------------------------------- */

form * {
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}

form label {
  display: block;
  color: #242628;
  font-size: 1.3rem;
  font-weight: bold;
}

form .word-count {
  float: right;
  font-weight: bold;
}

fieldset {
  margin: 0 0 3em 0;
  padding: 0;
  border: none;
}

legend {
  display: block;
  margin: 2em 0;
  width: 100%;
  border-bottom: #e1e1e1 1px solid;
  color: #aaa9a2;
  font-size: 1.2em;
  line-height: 2.0em;
}

input {
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}

/* Form Groups
/* ---------------------------------------------------------- */

.form-group {
  position: relative;
  margin-bottom: 1.6em;
  max-width: 500px;
  width: 100%;
}

.form-group p {
  margin: 4px 0 0 0;
  color: #b3b2a8;
  font-size: 1.3rem;
}

.form-group label {
  margin-bottom: 4px;
}

@media (max-width: 550px) {
  .form-group {
    max-width: 100%;
  }
}

/* Input Icons
/* ---------------------------------------------------------- */

.input-icon[class*="icon-"] {
  position: relative;
  display: block;
}

.input-icon[class*="icon-"] input[type="email"],
.input-icon[class*="icon-"] input[type="number"],
.input-icon[class*="icon-"] input[type="password"],
.input-icon[class*="icon-"] input[type="search"],
.input-icon[class*="icon-"] input[type="tel"],
.input-icon[class*="icon-"] input[type="text"],
.input-icon[class*="icon-"] input[type="url"],
.input-icon[class*="icon-"] input[type="date"] {
  padding-left: 3.2rem;
}

.input-icon[class*="icon-"] .gh-select select {
  padding-left: 3.2rem;
}

.input-icon[class*="icon-"]:before {
  position: absolute;
  top: 50%;
  left: 1.1rem;
  z-index: 100;
  font-size: 1.3rem;
  -webkit-transform: translateY(-52%);
  transform: translateY(-52%);
}

/* Inputs
/* ---------------------------------------------------------- */

.gh-input,
.gh-select,
select {
  display: block;
  padding: 8px 10px;
  width: 100%;
  border: 1px solid #e0dfd7;
  border-radius: 4px;
  color: #242628;
  font-size: 1.4rem;
  font-weight: normal;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  transition: border-color 0.15s linear;
  -webkit-appearance: none;
}

.gh-input.error,
.gh-select.error,
select.error {
  border-color: #e25440;
}

.gh-input:focus,
.gh-select:focus,
select:focus {
  outline: 0;
  border-color: #aaa9a2;
}

textarea {
  min-width: 250px;
  min-height: 10rem;
  max-width: 500px;
  width: 100%;
  height: auto;
  line-height: 1.5;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  resize: vertical;
}

/* Radio / Checkboxes
/* ---------------------------------------------------------- */

.for-radio label,
.for-checkbox label {
  display: block;
  padding-bottom: 4px;
}

.for-radio label p,
.for-checkbox label p {
  color: #000;
  font-weight: normal;
}

.for-radio label:hover input:not(:checked) + .input-toggle-component,
.for-checkbox label:hover input:not(:checked) + .input-toggle-component {
  border-color: #c0bfb6;
}

.for-radio input,
.for-checkbox input {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: -9999px;
}

.for-radio .input-toggle-component,
.for-checkbox .input-toggle-component {
  position: relative;
  top: 1px;
  display: inline-block;
  float: left;
  margin-right: 7px;
  width: 18px;
  height: 18px;
  border: 1px solid #e1e1e1;
  background: #f7f7f3;
}

.for-radio p,
.for-checkbox p {
  color: #b3b2a8;
  white-space: nowrap;
  font-weight: normal;
}

.for-checkbox .input-toggle-component {
  border-radius: 4px;
}

.for-checkbox label .input-toggle-component {
  transition: background 0.15s ease-in-out, border-color 0.15s ease-in-out;
}

.for-checkbox label .input-toggle-component:before {
  content: "";
  position: absolute;
  top: 4px;
  left: 3px;
  width: 10px;
  height: 6px;
  border: 2px solid #fff;
  border-top: none;
  border-right: none;
  opacity: 0;
  transition: opacity 0.15s ease-in-out;
  -webkit-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.for-checkbox label input:checked + .input-toggle-component {
  border-color: rgb(133, 159, 65);
  background: #9fbb58;
}

.for-checkbox label input:checked + .input-toggle-component:before {
  opacity: 1;
}

.for-radio .input-toggle-component {
  border-radius: 100px;
}

.for-radio label .input-toggle-component {
  transition: background 0.15s ease-in-out, border-color 0.15s ease-in-out;
}

.for-radio label .input-toggle-component:before {
  content: "";
  position: absolute;
  top: 4px;
  left: 4px;
  width: 8px;
  height: 8px;
  background: #fff;
  border-radius: 100%;
  opacity: 0;
  transition: opacity 0.15s ease-in-out;
}

.for-radio label input:checked + .input-toggle-component {
  border-color: rgb(133, 159, 65);
  background: #9fbb58;
}

.for-radio label input:checked + .input-toggle-component:before {
  opacity: 1;
}

/* Select
/* ---------------------------------------------------------- */

.gh-select {
  position: relative;
  display: block;
  overflow: hidden;
  padding: 0;
  max-width: 100%;
  width: 100%;
  border-width: 0;
}

.gh-select:after {
  content: "\e00f";
  position: absolute;
  top: 50%;
  right: 0.8em;
  margin-top: -0.5em;
  text-transform: none !important;
  font-family: "ghosticons" !important;
  line-height: 1;
  font-weight: normal !important;
  font-style: normal !important;
  -webkit-font-feature-settings: normal,;
  font-feature-settings: normal,;
  font-variant: normal !important;
  pointer-events: none;
  speak: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.gh-select select {
  padding: 8px 10px;
  outline: none;
  background: #fff;
  text-indent: 0.01px;
  text-overflow: "";
  line-height: normal;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: window;
}

.gh-select select::-ms-expand {
  display: none;
}

.gh-select select:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 #000;
}

/* FFF: Fucking Firefox Fixes
/* ---------------------------------------------------------- */

@-moz-document url-prefix()  {
  .gh-select {
    border-width: 1px;
  }

  .gh-select select {
    padding: 7px 10px 7px 8px;
  }

  .gh-select:focus {
    border-color: #aaa9a2;
  }
}

/* Buttons
/* ---------------------------------------------------------- */

/* Base button style */

.btn {
  display: inline-block;
  margin-bottom: 0;
  padding: 9px 15px;
  border: #e1e1e1 1px solid;
  background: #fff;
  background-image: none;
  /* Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214 */
  border-radius: 4px;
  color: #828282;
  text-align: center;
  text-transform: uppercase;
  text-shadow: none;
  white-space: nowrap;
  letter-spacing: 1px;
  font-size: 1.1rem;
  line-height: 1.428571429;
  font-weight: 300;
  cursor: pointer;
  transition: color 0.2s ease,
    background 0.2s ease,
    border-color 0.2s ease;
}

/* When hovered or clicked */

.btn:hover,
.btn:focus {
  border-color: #5ba4e5;
  color: rgb(48, 141, 223);
  text-decoration: none;
}

/* When focused with keyboard */

.btn:focus,
.btn:active:focus,
.btn.active:focus {
  outline: thin dotted;
  outline: 0 auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

/* When clicked */

.btn:active,
.btn.active {
  outline: 0;
  background-image: none;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.2);
}

/* When disabled */

.btn.disabled,
.btn[disabled],
fieldset[disabled] .btn {
  box-shadow: none;
  opacity: 0.65;
  cursor: not-allowed;
  pointer-events: none;
}

/* Blue button
/* ---------------------------------------------------------- */

.btn-blue {
  border-color: rgb(48, 141, 223);
  background: #5ba4e5;
  color: #fff;
}

.btn-blue:hover,
.btn-blue:active,
.btn-blue:focus {
  border-color: rgb(30, 115, 190);
  background: rgb(48, 141, 223);
  color: #fff;
}

/* Green button
/* ---------------------------------------------------------- */

.btn-green {
  border-color: rgb(133, 159, 65);
  background: #9fbb58;
  color: #fff;
}

.btn-green:hover,
.btn-green:active,
.btn-green:focus {
  border-color: rgb(102, 123, 50);
  background: rgb(133, 159, 65);
  color: #fff;
}

/* Red button
/* ---------------------------------------------------------- */

.btn-red {
  border-color: rgb(209, 52, 31);
  background: #e25440;
  color: #fff;
}

.btn-red:hover,
.btn-red:active,
.btn-red:focus {
  border-color: rgb(164, 41, 25);
  background: rgb(209, 52, 31);
  color: #fff;
}

/* Link button
/* ---------------------------------------------------------- */

/* For styling a button like a link */

.btn-link {
  border-color: transparent;
  background: transparent;
  color: #5ba4e5;
}

.btn-link:hover,
.btn-link:active,
.btn-link:focus {
  border-color: transparent;
  background: transparent;
  color: #5ba4e5;
  text-decoration: underline;
}

.btn-link.disabled,
.btn-link[disabled] {
  box-shadow: none;
  color: #b2b2b2;
  opacity: 0.65;
  cursor: not-allowed;
  pointer-events: none;
}

/* Minor button
/* ---------------------------------------------------------- */

/* For buttons with a small/insignificant action for
// example a "cancel" button. Style is de-emphasised. */

.btn-minor {
  padding: 8px 15px;
  text-transform: none;
  letter-spacing: 0;
  font-size: 1.2rem;
}

.btn-minor:hover,
.btn-minor:active,
.btn-minor:focus {
  border-color: #c1c1c1;
  background: #fff;
  color: #828282;
}

/* Button size variations
/* ---------------------------------------------------------- */

.btn-lg {
  padding: 12px 18px;
  border-radius: 4px;
  font-size: 1.4rem;
  line-height: 1.33;
}

.btn-sm {
  padding: 7px 10px;
  border-radius: 2px;
  font-size: 1rem;
  line-height: 1.5;
}

.btn-block {
  display: block;
  width: 100%;
}

/* Vertically space out multiple block buttons */

.btn-block + .btn-block {
  margin-top: 5px;
}

/* Specificity overrides */

input[type="submit"].btn-block,
input[type="reset"].btn-block,
input[type="button"].btn-block {
  width: 100%;
}

/* Labels
/* ---------------------------------------------------------- */

.label {
  display: inline;
  padding: 0.2em 0.6em 0.3em;
  border-radius: 0.25em;
  color: #fff;
  vertical-align: baseline;
  text-align: center;
  white-space: nowrap;
  font-size: 75%;
  line-height: 1;
  font-weight: 300;
}

.label:empty {
  display: none;
}

.btn .label {
  position: relative;
  top: -1px;
}

h1 .label,
h2 .label,
h3 .label,
h4 .label,
h5 .label,
h6 .label {
  position: relative;
  top: -0.18em;
  display: inline-block;
  padding: 0.2em 0.5em 0.25em;
  font-size: 70%;
  line-height: 70%;
}

a.label:hover,
a.label:focus {
  color: #fff;
  text-decoration: none;
  cursor: pointer;
}

/* Label Colours
/* ---------------------------------------------------------- */

.label-default {
  background-color: #a1adb3;
  color: #fff;
}

.label-default[href] {
  color: #fff;
}

.label-default[href]:hover,
.label-default[href]:focus {
  background-color: rgb(133, 149, 157);
}

.label-alt {
  background-color: #666;
  color: #fff;
}

.label-alt[href] {
  color: #fff;
}

.label-alt[href]:hover,
.label-alt[href]:focus {
  background-color: rgb(77, 77, 77);
}

.label-blue {
  background-color: #5ba4e5;
  color: #fff;
}

.label-blue[href] {
  color: #fff;
}

.label-blue[href]:hover,
.label-blue[href]:focus {
  background-color: rgb(48, 141, 223);
}

.label-green {
  background-color: #9fbb58;
  color: #fff;
}

.label-green[href] {
  color: #fff;
}

.label-green[href]:hover,
.label-green[href]:focus {
  background-color: rgb(133, 159, 65);
}

.label-red {
  background-color: #e25440;
  color: #fff;
}

.label-red[href] {
  color: #fff;
}

.label-red[href]:hover,
.label-red[href]:focus {
  background-color: rgb(209, 52, 31);
}

/* Tables
/* ---------------------------------------------------------- */

/* Base */

table,
.table {
  margin: 1.6em 0;
  max-width: 100%;
  width: 100%;
  background-color: transparent;
}

table th,
table td,
.table th,
.table td {
  padding: 8px;
  vertical-align: middle;
  text-align: left;
  line-height: 20px;
}

/* Default Table
/* ---------------------------------------------------------- */

.table th,
.table td {
  border-top: 1px solid #e1e1e1;
}

.table th {
  color: #aaa9a2;
}

.table caption + thead tr:first-child th,
.table caption + thead tr:first-child td,
.table colgroup + thead tr:first-child th,
.table colgroup + thead tr:first-child td,
.table thead:first-child tr:first-child th,
.table thead:first-child tr:first-child td {
  border-top: 0;
}

.table tbody + tbody {
  border-top: 2px solid #e1e1e1;
}

.table table table {
  background-color: #fff;
}

.table tbody > tr:nth-child(odd) > td,
.table tbody > tr:nth-child(odd) > th {
  background-color: rgb(250, 250, 250);
}

.table.plain tbody > tr:nth-child(odd) > td,
.table.plain tbody > tr:nth-child(odd) > th {
  background: transparent;
}

/* Nav Lists
/* ---------------------------------------------------------- */

.nav-list {
  padding: 0;
  max-width: 500px;
  border: 1px solid #e0dfd7;
  background: #fff;
  border-radius: 4px;
}

.nav-list.nav-list-block {
  max-width: none;
}

.nav-list-item {
  position: relative;
  display: block;
  padding: 8px 40px 8px 12px;
  color: #242628;
}

.nav-list-item:hover {
  background: rgb(250, 250, 250);
}

.nav-list-item:first-of-type {
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
}

.nav-list-item:last-of-type {
  border-bottom-right-radius: 4px;
  border-bottom-left-radius: 4px;
}

.nav-list-item:not(:last-of-type) {
  border-bottom: 1px solid #e0dfd7;
}

.nav-list-item button {
  text-align: left;
}

.nav-list-item a {
  color: #242628;
}

.nav-list-item b {
  display: block;
  font-size: 1.6rem;
  line-height: 1.375;
  font-weight: normal;
}

.nav-list-item span {
  display: block;
  color: #7d878a;
  font-size: 1.1rem;
  line-height: 1.375;
}

.nav-list-item i {
  position: absolute;
  top: 50%;
  right: 10px;
  margin-top: -0.9rem;
  font-size: 1.4rem;
}

/* Components: Groups of Patterns
/* ---------------------------------------------------------- */

/* Modals
/* ---------------------------------------------------------- */

/* Full screen container
/* ---------------------------------------------------------- */

.modal-container {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1040;
  display: none;
  overflow-x: auto;
  overflow-y: scroll;
  padding-right: 10px;
  padding-left: 10px;
  transition: all 0.15s linear 0s;
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
}

.modal-background {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1030;
  display: none;
  background: rgba(0, 0, 0, 0.6);
}

/* The modal
/* ---------------------------------------------------------- */

.modal,
.modal-action {
  right: auto;
  left: 50%;
  z-index: 1050;
  margin-right: auto;
  margin-left: auto;
  padding-top: 30px;
  padding-bottom: 30px;
  max-width: 550px;
  width: 100%;
  pointer-events: auto;
}

@media (max-width: 900px) {
  .modal,
  .modal-action {
    padding: 10px;
  }
}

.modal button,
.modal-action button {
  min-width: 100px;
}

.modal .image-uploader,
.modal .pre-image-uploader,
.modal-action .image-uploader,
.modal-action .pre-image-uploader {
  margin: 0;
}

.modal-action {
  padding: 60px 0 30px;
}

@media (max-width: 900px) {
  .modal-action {
    padding: 30px 0;
  }
}

/* Modal content
/* ---------------------------------------------------------- */

.modal-content {
  position: relative;
  padding: 18px;
  background-color: #fff;
  background-clip: padding-box;
  border-radius: 4px;
  box-shadow: rgba(0, 0, 0, 0.2) 0 0 0 6px;
}

.modal-content * {
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}

.modal-content .close {
  position: absolute;
  top: 19px;
  right: 19px;
  z-index: 9999;
  margin: 0;
  padding: 0;
  width: 16px;
  border: none;
}

.modal-header {
  position: relative;
  margin-bottom: 18px;
}

.modal-header h1 {
  display: inline-block;
  margin: 0 25px 0 0;
  font-size: 1.85em;
  font-weight: 100;
}

.modal-body {
  position: relative;
  overflow-y: auto;
}

.modal-body .red {
  color: #e25440;
}

.modal-body > *:first-child {
  margin-top: 0;
}

.modal-body > *:last-child {
  margin-bottom: 0;
}

.modal-footer {
  margin-top: 20px;
  text-align: right;
}

.modal-footer button {
  margin-left: 8px;
}

/* Modifiers
/* ---------------------------------------------------------- */

.modal-style-wide {
  width: 550px;
}

@media (max-width: 900px) {
  .modal-style-wide {
    width: 100%;
  }
}

.modal-style-centered {
  text-align: center;
}

/* Login styles */

.modal-body .login-form {
  display: block;
}

.modal-body .login-form .password-wrap input {
  width: 100%;
}

@media (max-width: 900px) {
  .modal-body .login-form {
    margin: 0 auto;
    max-width: 264px;
  }

  .modal-body .login-form .password-wrap {
    margin: 0 auto 1em;
    width: 100%;
  }

  .modal-body .login-form .btn {
    margin: 0;
    margin-bottom: 1em;
    width: 100%;
  }
}

@media (min-width: 901px) {
  .modal-body .login-form {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }

  .modal-body .login-form .password-wrap {
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
  }
}

/* Open States
/* ---------------------------------------------------------- */

.modal-container.open,
.modal-container.open > .modal,
.modal-container.open > .modal-action {
  display: block;
}

.modal-background.open {
  display: block;
}

/* Animations
/* ---------------------------------------------------------- */

.modal-container.fade-out {
  -webkit-animation-duration: 0.08s;
  animation-duration: 0.08s;
}

.modal-background.fade-out {
  -webkit-animation-duration: 0.15s;
  animation-duration: 0.15s;
}

/* Notifications
/* ---------------------------------------------------------- */

/* Base notification style */

.gh-notifications {
  position: fixed;
  bottom: 20px;
  left: 20px;
  z-index: 7000;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

/* Base notification style */

.gh-notification {
  position: relative;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-top: 5px;
  padding: 4px;
  width: 220px;
  border: #e1e1e1 1px solid;
  background: rgba(255,255,255,0.9);
  border-radius: 4px;
  box-shadow: rgba(0,0,0,0.06) 0 1px 7px;
  color: #828282;
  font-size: 1.2rem;
  line-height: 1.4em;
}

.gh-notification:hover {
  cursor: pointer;
}

.gh-notification-content {
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  padding: 10px 15px;
  border-radius: 3px;
  transition: background 0.2s ease;
}

.gh-notification em {
  color: #5ba4e5;
  font-style: normal;
}

.gh-notification:hover .gh-notification-content {
  background: rgb(242, 248, 253);
}

.gh-notification-close {
  position: absolute;
  top: 0;
  right: 0;
  padding: 6px 6px 5px 5px;
  background: #fff;
  border-radius: 0 4px 0 4px;
  font-size: 7px;
  line-height: 5px;
}

.gh-notification-close:hover {
  background: #fff;
  color: #e25440;
}

/* Red notification
/* ---------------------------------------------------------- */

.gh-notification-red {
  border: rgb(245, 195, 188) 1px solid;
}

.gh-notification-red em {
  color: #e25440;
}

.gh-notification-red:hover .gh-notification-content {
  background: rgb(253, 243, 242);
}

/* Green notification
/* ---------------------------------------------------------- */

.gh-notification-green {
  border: rgb(217, 228, 190) 1px solid;
}

.gh-notification-green em {
  color: #9fbb58;
}

.gh-notification-green:hover .gh-notification-content {
  background: rgb(242, 246, 233);
}

/* Alerts
/* ---------------------------------------------------------- */

/* Alert wrapper, top of screen */

.gh-alerts {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

/* Base alert style */

.gh-alert {
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 14px 15px;
  border-bottom: #e1e1e1 1px solid;
}

.gh-alert-content {
  font-size: 1.4rem;
  line-height: 1.3em;
  font-weight: 200;
  -webkit-user-select: all;
  -moz-user-select: all;
  -ms-user-select: all;
  user-select: all;
}

.gh-alert a {
  text-decoration: underline;
  font-weight: 400;
  -webkit-user-select: all;
  -moz-user-select: all;
  -ms-user-select: all;
  user-select: all;
}

.gh-alert-close {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-left: 20px;
  padding: 5px;
  font-size: 10px;
  line-height: 10px;
}

.gh-alert-close:hover {
  color: #e25440;
}

/* Blue alert
/* ---------------------------------------------------------- */

.gh-alert-blue {
  border-bottom: rgb(48, 141, 223) 1px solid;
  background: #5ba4e5;
  color: #fff;
}

.gh-alert-blue a {
  color: #fff;
}

.gh-alert-blue .gh-alert-close:hover {
  color: #fff;
}

/* Red alert
/* ---------------------------------------------------------- */

.gh-alert-red {
  border-bottom: rgb(209, 52, 31) 1px solid;
  background: #e25440;
  color: #fff;
}

.gh-alert-red a {
  color: #fff;
}

.gh-alert-red .gh-alert-close:hover {
  color: #fff;
}

/* Green alert
/* ---------------------------------------------------------- */

.gh-alert-green {
  border-bottom: rgb(142, 170, 70) 1px solid;
  background: #9fbb58;
  color: #fff;
}

.gh-alert-green a {
  color: #fff;
}

.gh-alert-green .gh-alert-close:hover {
  color: #fff;
}

/* Black alert
/* ---------------------------------------------------------- */

.gh-alert-black {
  border-bottom: rgb(12, 13, 13) 1px solid;
  background: #242628;
  color: #fff;
}

.gh-alert-black a {
  color: #fff;
}

.gh-alert-black .gh-alert-close:hover {
  color: #fff;
}

/* Yellow alert
/* ---------------------------------------------------------- */

.gh-alert-yellow {
  border-bottom: #e9ebb6 1px solid;
  background: #fdffb6;
}

/* Image Uploader
/* ---------------------------------------------------------- */

.image-uploader {
  position: relative;
  overflow: hidden;
  margin: 1.6em 0;
  padding: 55px 60px;
  width: 100%;
  height: auto;
  border: #e1e1e1 2px dashed;
  background: #f6f6f6;
  border-radius: 4px;
  color: #828282;
  text-align: center;
}

.image-uploader a {
  color: #aaa9a2;
  text-decoration: none;
}

.image-uploader a:hover {
  color: #242628;
}

.image-uploader .image-upload,
.image-uploader .image-url {
  position: absolute;
  bottom: 0;
  left: 0;
  display: block;
  padding: 10px;
  color: #aaa9a2;
  text-decoration: none;
  line-height: 12px;
}

.image-uploader .image-upload:hover,
.image-uploader .image-url:hover {
  cursor: pointer;
}

.image-uploader .btn-green {
  position: relative;
  z-index: 700;
  display: inline-block;
  color: #fff;
}

.image-uploader .btn-blue {
  margin: 0 0 0 10px;
}

.image-uploader input.main {
  position: absolute;
  right: 0;
  margin: 0;
  font-size: 23px;
  opacity: 0;
  cursor: pointer;
  -webkit-transform: scale(14);
  transform: scale(14);
  -webkit-transform-origin: right;
  transform-origin: right;
  direction: ltr;
}

.image-uploader input.main.right {
  right: 9999px;
  height: 0;
}

.image-uploader input.url {
  margin: 10px 0;
  padding: 9px 7px;
  outline: 0;
  background: #fff;
  vertical-align: middle;
  font: -webkit-small-control;
  font-size: 1.1em;
}

.image-uploader input.url + .btn.btn-blue {
  color: #fff;
}

.image-uploader .progress {
  position: relative;
  display: block;
  overflow: hidden;
  margin: -19px 0 44px 0;
  background: linear-gradient(to bottom, #f5f5f5, #f9f9f9);
  border-radius: 12px;
  box-shadow: rgba(0, 0, 0, 0.1) 0 1px 2px inset;
}

.image-uploader .fileupload-loading {
  top: 50%;
  display: block;
  margin: -28px auto 0;
  width: 35px;
  height: 28px;
  background-size: contain;
}

.image-uploader .failed {
  position: relative;
  top: -40px;
  font-size: 16px;
}

.image-uploader .bar {
  height: 12px;
  background: #5ba4e5;
}

.image-uploader .bar.fail {
  background: #e25440;
}

/* Pre-Image-Uploader // TODO: RENAME
/* ---------------------------------------------------------- */

.pre-image-uploader {
  position: relative;
  overflow: hidden;
  margin: 1.6em 0;
  min-height: 46px;
  height: auto;
  background: rgba(0, 0, 0, 0.1);
  border-radius: 2px;
  color: #aaa9a2;
}

.pre-image-uploader input {
  position: absolute;
  left: 9999px;
  opacity: 0;
}

.pre-image-uploader a {
  z-index: 10000;
  color: #aaa9a2;
  text-decoration: none;
}

.pre-image-uploader a:hover {
  color: #242628;
}

.pre-image-uploader img {
  display: block;
  margin: 0 auto;
  max-width: 100%;
  line-height: 0;
}

.pre-image-uploader .image-cancel {
  position: absolute;
  top: 10px;
  right: 10px;
  z-index: 300;
  display: block;
  padding: 8px;
  background: rgba(0, 0, 0, 0.6);
  border-radius: 4px;
  box-shadow: rgba(255, 255, 255, 0.2) 0 0 0 1px;
  color: #fff;
  text-decoration: none;
  font-size: 13px;
  line-height: 10px;
}

.pre-image-uploader .image-cancel:hover {
  background: #e25440;
  color: #fff;
  cursor: pointer;
}

/* Splitbuttons
/* ---------------------------------------------------------- */

.splitbtn {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  /* Flatten out the right side */
  /* Flatten out the left side */
}

.splitbtn .btn {
  position: relative;
  float: left;
  /* Prevent double border between buttons */
  /* Make sure the hovered element is always on
    // top so overlap from .btn + btn. invisible */
}

.splitbtn .btn + .btn {
  margin-left: -1px;
}

.splitbtn .btn:hover,
.splitbtn .btn:focus,
.splitbtn .btn:active,
.splitbtn .btn.active {
  z-index: 2;
}

.splitbtn .btn:first-child {
  margin-left: 0;
}

.splitbtn .btn:first-child:not(:last-child):not(.dropdown-toggle) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.splitbtn .dropdown-toggle {
  padding-right: 12px;
  padding-left: 12px;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  /* This is the additional dropdown arrow, to the right of the button. */
}

.splitbtn .dropdown-toggle.btn-sm {
  padding-right: 10px;
  padding-left: 10px;
}

.splitbtn .dropdown-toggle.btn-lg {
  padding-right: 16px;
  padding-left: 16px;
}

.splitbtn .dropdown-toggle .options {
  color: #fff;
  text-align: center;
}

/* Dropdowns
/* ---------------------------------------------------------- */

.dropdown {
  position: relative;
  z-index: 1000;
}

.dropdown-toggle:focus {
  outline: 0;
}

.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  float: left;
  margin: 2px 0 0;
  padding: 5px 0;
  min-width: 220px;
  border: rgb(174, 205, 219) 1px solid;
  background-color: #fff;
  background-clip: padding-box;
  border-radius: 4px;
  box-shadow: rgba(0, 0, 0, 0.175) 0 2px 6px;
  list-style: none;
  text-align: left;
  text-transform: none;
  letter-spacing: 0;
  font-size: 1.4rem;
  font-weight: normal;
}

.dropdown-menu.pull-right {
  right: 0;
  left: auto;
}

.dropdown-menu .divider {
  overflow: hidden;
  margin: 4px 0;
  height: 1px;
  background: rgb(209, 226, 234);
}

.dropdown-menu > li > a,
.dropdown-menu > li > button {
  display: block;
  clear: both;
  padding: 3px 20px;
  width: 100%;
  color: #333;
  text-align: left;
  white-space: nowrap;
  line-height: 1.9em;
  font-weight: normal;
  transition: none;
}

.dropdown-menu i {
  margin-right: 0.5rem;
  font-size: 0.9em;
}

/* States
/* ---------------------------------------------------------- */

/* Hover/Focus */

.dropdown-menu > li > a:hover,
.dropdown-menu > li > a:focus,
.dropdown-menu > li > button:hover,
.dropdown-menu > li > button:focus {
  background: #5ba4e5;
  color: #fff;
  text-decoration: none;
}

/* Active */

.dropdown-menu > .active > a,
.dropdown-menu > .active > a:hover,
.dropdown-menu > .active > a:focus,
.dropdown-menu > .active > button,
.dropdown-menu > .active > button:hover,
.dropdown-menu > .active > button:focus {
  outline: 0;
  background-color: #428bca;
  color: #fff;
  text-decoration: none;
}

/* Disabled */

.dropdown-menu > .disabled > a,
.dropdown-menu > .disabled > a:hover,
.dropdown-menu > .disabled > a:focus,
.dropdown-menu > .disabled > button,
.dropdown-menu > .disabled > button:hover,
.dropdown-menu > .disabled > button:focus {
  color: #777;
}

.dropdown-menu > .disabled > a:hover,
.dropdown-menu > .disabled > a:focus,
.dropdown-menu > .disabled > button:hover,
.dropdown-menu > .disabled > button:focus {
  background-color: transparent;
  background-image: none;
  text-decoration: none;
  cursor: not-allowed;
}

/* Open / Close
/* ---------------------------------------------------------- */

.open > .dropdown-menu {
  display: block;
}

.open > a {
  outline: 0;
}

.closed > .dropdown-menu {
  display: none;
}

/* Pagination
/* ---------------------------------------------------------- */

.pagination {
  display: inline-block;
  margin: 20px 0;
  padding-left: 0;
  border-radius: 4px;
}

.pagination > li {
  display: inline;
}

.pagination > li > a,
.pagination > li > span {
  position: relative;
  float: left;
  margin-left: -1px;
  padding: 6px 12px;
  border: 1px solid #e1e1e1;
  background-color: #fff;
  color: #5ba4e5;
  text-decoration: none;
  line-height: 1.42857143;
}

.pagination > li:first-child > a,
.pagination > li:first-child > span {
  margin-left: 0;
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
}

.pagination > li:last-child > a,
.pagination > li:last-child > span {
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
}

.pagination > li > a:hover,
.pagination > li > a:focus,
.pagination > li > span:hover,
.pagination > li > span:focus {
  background-color: #eee;
  color: #2a6496;
}

.pagination > .active > a,
.pagination > .active > a:hover,
.pagination > .active > a:focus,
.pagination > .active > span,
.pagination > .active > span:hover,
.pagination > .active > span:focus {
  z-index: 2;
  background-color: #428bca;
  color: #fff;
  cursor: default;
}

.pagination > .disabled > span,
.pagination > .disabled > span:hover,
.pagination > .disabled > span:focus,
.pagination > .disabled > a,
.pagination > .disabled > a:hover,
.pagination > .disabled > a:focus {
  border-color: #ddd;
  background-color: #fff;
  color: #777;
  cursor: not-allowed;
}

/* Sizing
/* ---------------------------------------------------------- */

.pagination-lg > li > a,
.pagination-lg > li > span {
  padding: 10px 16px;
  font-size: 18px;
}

.pagination-lg > li:first-child > a,
.pagination-lg > li:first-child > span {
  border-top-left-radius: 6px;
  border-bottom-left-radius: 6px;
}

.pagination-lg > li:last-child > a,
.pagination-lg > li:last-child > span {
  border-top-right-radius: 6px;
  border-bottom-right-radius: 6px;
}

.pagination-sm > li > a,
.pagination-sm > li > span {
  padding: 5px 10px;
  font-size: 12px;
}

.pagination-sm > li:first-child > a,
.pagination-sm > li:first-child > span {
  border-top-left-radius: 3px;
  border-bottom-left-radius: 3px;
}

.pagination-sm > li:last-child > a,
.pagination-sm > li:last-child > span {
  border-top-right-radius: 3px;
  border-bottom-right-radius: 3px;
}

/* Badges
/* ---------------------------------------------------------- */

.badge {
  display: inline-block;
  padding: 2px 4px;
  min-width: 10px;
  background-color: #777;
  border-radius: 10px;
  box-shadow: 0 0 0 1px #777;
  color: #fff;
  vertical-align: baseline;
  text-align: center;
  white-space: nowrap;
  font-size: 1rem;
  line-height: 1;
  font-weight: inherit;
}

.badge:empty {
  display: none;
}

.btn .badge {
  position: relative;
  top: -1px;
}

.btn-xs .badge {
  top: 0;
  padding: 1px 5px;
}

p .badge {
  position: relative;
  top: -2px;
  margin-left: -1px;
  padding: 0 4px 3px;
}

.nav-pills > li > a > .badge {
  margin-left: 3px;
}

.nav-item .badge {
  margin-top: -5px;
  margin-left: 3px;
}

a.badge:hover,
a.badge:focus {
  color: #fff;
  text-decoration: none;
  cursor: pointer;
}

/* Colour variations
/* ---------------------------------------------------------- */

.badge.badge-blue {
  background-color: #5ba4e5;
  box-shadow: 0 0 0 1px #5ba4e5;
}

.badge.badge-green {
  background-color: #9fbb58;
  box-shadow: 0 0 0 1px #9fbb58;
}

.badge.badge-red {
  background-color: #e25440;
  box-shadow: 0 0 0 1px #e25440;
}

/* Popovers
/* ---------------------------------------------------------- */

.popover-item {
  position: relative;
  display: inline-block;
  padding: 11px 26px 13px 16px;
  min-width: 300px;
  max-width: 400px;
  background: #242628;
  border-radius: 6px;
  color: #7d878a;
  font-size: 1.2rem;
}

.popover-title {
  color: #fff;
  font-size: 1.4rem;
  font-weight: 300;
}

.popover-desc {
  margin-top: -4px;
}

.popover-body {
  margin-top: 11px;
  line-height: 1.7;
}

.popover-body b {
  color: #fff;
}

.popover-body > *:last-child {
  margin: 0;
}

/* Open / Close
/* ---------------------------------------------------------- */

.popover {
  position: relative;
  display: inline-block;
}

.popover .popover-item {
  position: absolute;
  z-index: 20;
}

.popover .popover-item.open {
  display: block;
}

.popover .popover-item.closed {
  display: none;
}

/* Settings Menu
/* ---------------------------------------------------------- */

/* Container
/* ---------------------------------------------------------- */

.settings-menu-container {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 500;
  overflow: hidden;
  width: 350px;
  border-left: #e1e1e1 1px solid;
  background: #fff;
  transition: -webkit-transform 0.4s cubic-bezier(0.1, 0.7, 0.1, 1);
  transition: transform 0.4s cubic-bezier(0.1, 0.7, 0.1, 1);
  -webkit-transform: translate3d(350px, 0px, 0px);
  transform: translate3d(350px, 0px, 0px);
}

body.settings-menu-expanded .settings-menu-container {
  -webkit-transform: translate3d(0, 0px, 0px);
  transform: translate3d(0, 0px, 0px);
}

.settings-menu-container .settings-menu-pane {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  opacity: 1;
  -webkit-transform: translate3d(0, 0px, 0px);
  transform: translate3d(0, 0px, 0px);
}

@media (min-width: 901px) {
  .settings-menu-container .settings-menu-pane {
    transition: -webkit-transform 0.4s cubic-bezier(0.1, 0.7, 0.1, 1);
    transition: transform 0.4s cubic-bezier(0.1, 0.7, 0.1, 1);
  }
}

.settings-menu-container .settings-menu-pane.settings-menu-pane-out-left {
  -webkit-transform: translate3d(-100%, 0px, 0px);
  transform: translate3d(-100%, 0px, 0px);
}

.settings-menu-container .settings-menu-pane.settings-menu-pane-out-right {
  -webkit-transform: translate3d(100%, 0px, 0px);
  transform: translate3d(100%, 0px, 0px);
}

.settings-menu-container .settings-menu-pane.settings-menu-pane-in {
  -webkit-transform: translate3d(0, 0px, 0px);
  transform: translate3d(0, 0px, 0px);
}

/* Header
/* ---------------------------------------------------------- */

.settings-menu-header {
  position: relative;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 19px 24px;
}

.settings-menu-header h4 {
  margin: 0;
  font-size: 1.6rem;
  line-height: 1.375;
  font-weight: normal;
}

.settings-menu-header .close {
  right: 22px;
  font-size: 12px;
}

.settings-menu-header.subview h4 {
  text-align: center;
}

.settings-menu-header.subview .back {
  left: 0;
}

.settings-menu-header.subview .back:before {
  left: 19px;
}

/* Content
/* ---------------------------------------------------------- */

.settings-menu-content {
  padding: 0 24px 24px;
}

.settings-menu-content .image-uploader {
  margin: 0 0 1.6rem 0;
}

.settings-menu-content .image-uploader.image-uploader-url {
  padding: 35px 45px;
}

.settings-menu-content textarea {
  height: 108px;
}

.settings-menu-content .tag-delete-button {
  padding-left: 0;
  color: #e25440;
}

.settings-menu-content .tag-delete-button:before {
  position: relative;
  top: -1px;
  margin-right: 4px;
}

.settings-menu-content .tag-delete-button:hover,
.settings-menu-content .tag-delete-button:hover:before {
  color: rgb(209, 52, 31);
}

.settings-menu-content .nav-list {
  margin-top: 3rem;
}

.settings-menu-content .pre-image-uploader {
  margin-top: 0;
  min-height: 50px;
  max-height: 250px;
  width: auto;
}

.settings-menu-content .word-count {
  font-weight: bold;
}

.ghost-url-preview {
  /* Preview never wider than input */
  overflow: hidden;
  width: 98%;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Background
/* ---------------------------------------------------------- */

body.settings-menu-expanded .content-cover {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 600;
  transition: -webkit-transform 0.4s cubic-bezier(0.1, 0.7, 0.1, 1);
  transition: transform 0.4s cubic-bezier(0.1, 0.7, 0.1, 1);
  -webkit-transform: translate3d(-350px, 0px, 0px);
  transform: translate3d(-350px, 0px, 0px);
  /* Not off the screen, to give a parallax effect */
}

/* Layouts: Groups of Components
/* ---------------------------------------------------------- */

/* Global Layout
/* ---------------------------------------------------------- */

/* Main viewport, contains main content, and alerts */

.gh-app {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: hidden;
  height: 100vh;
}

/* Content viewport, contains everything else */

.gh-viewport {
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.gh-main {
  position: relative;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

/* Global Nav
/* ---------------------------------------------------------- */

.gh-nav {
  position: relative;
  z-index: 1000;
  -webkit-flex: 0 0 235px;
  -ms-flex: 0 0 235px;
  flex: 0 0 235px;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border-right: #e1e1e1 1px solid;
  background: #f6f6f6;
  -webkit-transform: translateX(0);
  transform: translateX(0);
}

.gh-nav-menu {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 15px;
}

.gh-nav-menu i {
  margin-right: 8px;
  width: 11px;
  height: 11px;
  font-size: 11px;
  line-height: 11px;
}

.gh-nav-menu:hover {
  cursor: pointer;
}

.gh-nav-menu-icon {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-right: 10px;
  width: 34px;
  height: 34px;
  background-color: #222;
  background-size: 34px;
  border-radius: 4px;
}

.gh-nav-menu-details {
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  padding-right: 10px;
}

.gh-nav-menu-details-blog {
  overflow: hidden;
  margin-bottom: 1px;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: 1.5rem;
  line-height: 1.3em;
  font-weight: 600;
}

.gh-nav-menu-details-user {
  overflow: hidden;
  color: #7d878a;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: 1.2rem;
  line-height: 1.2em;
}

.gh-nav-body {
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  overflow-y: auto;
}

.gh-nav-search {
  position: relative;
  margin: 0 15px 10px;
}

.gh-nav-search-input {
  padding: 5px 8px;
  border-radius: 4px;
  font-size: 1.3rem;
}

.gh-nav-search-button {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 0 6px 0 5px;
}

.gh-nav-search-button i {
  width: 16px;
  height: 16px;
  color: #7d878a;
  font-size: 13px;
  transition: color 0.2s ease;
  -webkit-transform: rotate(90deg);
  transform: rotate(90deg);
}

.gh-nav-search-button:hover i {
  color: #242628;
}

.gh-nav-list {
  margin: 0;
  padding: 0 15px 0 0;
  list-style: none;
  font-size: 1.3rem;
  line-height: 1.5em;
}

.gh-nav-list-h {
  overflow: hidden;
  margin-top: 15px;
  padding: 5px 10px 5px 15px;
  color: #828282;
  text-transform: uppercase;
  text-overflow: ellipsis;
  white-space: nowrap;
  letter-spacing: 1px;
  font-size: 1.2rem;
  line-height: 1.1em;
}

.gh-nav-list a {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 5px 10px 5px 15px;
  border-radius: 0 4px 4px 0;
  color: #242628;
  transition: none;
}

.gh-nav-list .active {
  background: rgb(136, 190, 236);
  color: #fff;
}

.gh-nav-list a:not(.active):hover {
  background: rgba(91, 164, 229, 0.15000000000000002);
  color: #242628;
}

.gh-nav-list i {
  margin-right: 8px;
  width: 15px;
  height: 15px;
  text-align: center;
  font-size: 15px;
}

.gh-nav-footer {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  height: 40px;
  border-top: #e1e1e1 1px solid;
  color: #7d878a;
}

.gh-nav-footer-sitelink {
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  padding: 12px;
  color: #7d878a;
  text-align: center;
  font-size: 1.3rem;
  line-height: 1;
  font-weight: 200;
}

.gh-nav-footer-sitelink i {
  margin-left: 5px;
  font-size: 1rem;
}

.gh-nav-footer-sitelink:hover {
  color: #5ba4e5;
}

/* Auto Nav - Opens and closes like OSX dock
/* ---------------------------------------------------------- */

.gh-autonav-toggle {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 5px 10px;
  width: 45px;
  height: 27px;
  border-right: #e1e1e1 1px solid;
  line-height: 1;
  cursor: pointer;
}

.gh-autonav-toggle:hover {
  cursor: pointer;
}

.gh-autonav-toggle i {
  transition: all 0.2s ease;
}

.gh-autonav-toggle:hover i {
  color: #5ba4e5;
}

/* Hide the nav */

.gh-autonav .gh-nav {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1000;
  width: 235px;
  height: 100%;
  transition: -webkit-transform 0.20s;
  transition: transform 0.20s;
  /* translate3d for GPU accelerated animation - http://bit.ly/1EY1Xhx */
  -webkit-transform: translate3d(-220px,0,0);
  transform: translate3d(-220px,0,0);
}

/* THE FUTURE: Super sexy background blur for Webkit - http://cl.ly/b1rG */

@supports (-webkit-backdrop-filter: none) or (backdrop-filter: none) {
  .gh-autonav .gh-nav {
    background: rgba(246,246,246, 0.7);
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(10px);
  }
}

/* Bring it back on hover */

.gh-autonav .gh-nav.open {
  transition: -webkit-transform 0.15s;
  transition: transform 0.15s;
  -webkit-transform: translate3d(0,0,0);
  transform: translate3d(0,0,0);
}

/* Move main content over for the closed-nav trigger bar */

.gh-autonav .gh-main {
  margin-left: 15px;
}

/* Help (?) Menu
/* ---------------------------------------------------------- */

.gh-help-menu {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 5px 10px;
  border-left: #e1e1e1 1px solid;
  cursor: pointer;
}

.gh-help-button {
  padding: 0 5px;
  color: #7d878a;
  text-align: center;
  font-size: 1.4rem;
  line-height: 1.2em;
  transition: all 0.5s;
}

.gh-help-menu:hover .gh-help-button {
  color: #5ba4e5;
  transition: all 0.3s;
}

.gh-help-menu .dropdown {
  right: 112px;
  bottom: 215px;
}

.gh-help-menu .dropdown .dropdown-menu {
  min-width: 200px;
}

.gh-help-menu .dropdown.fade-in-scale {
  -webkit-animation-duration: 0.1s;
  animation-duration: 0.1s;
}

.gh-help-menu .dropdown.fade-out {
  -webkit-animation-duration: 0.01s;
  animation-duration: 0.01s;
}

/* Container for App View
/* ---------------------------------------------------------- */

.gh-view {
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.view-header {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 0 20px;
  height: 65px;
  border-bottom: #e1e1e1 1px solid;
}

.view-title {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
  overflow: hidden;
  margin: 0;
  padding: 0;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: 2rem;
  line-height: 1.2em;
  font-weight: 400;
}

.view-title a {
  color: inherit;
}

.view-title a:hover {
  color: #5ba4e5;
}

.view-title i {
  margin: 0 10px;
  color: #818181;
  font-size: 1.4rem;
}

.view-container,
.view-content {
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  overflow-x: hidden;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}

.view-content {
  padding: 20px;
}

.view-content p,
.view-content p * {
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}

/* Full screen workflow
/* ---------------------------------------------------------- */

.gh-flow {
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 100vh;
}

.gh-flow-head {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding-top: 4vh;
  padding-bottom: 20px;
}

.gh-flow-content-wrap {
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  margin: 0 5%;
  padding-bottom: 8vh;
}

.gh-flow-back {
  position: absolute;
  top: 0;
  left: 0;
  margin: 0 0 0 3%;
  padding: 2px 9px 2px 5px;
  border: transparent 1px solid;
  border-radius: 4px;
  color: #7d878a;
  font-weight: 100;
  transition: all 0.3s ease;
}

.gh-flow-back:hover {
  border: #dae1e3 1px solid;
}

.gh-flow-nav {
  position: relative;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.gh-flow-nav ol {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 0 auto;
  padding: 0;
  width: 160px;
  list-style: none;
}

.gh-flow-nav li {
  margin: 0;
}

.gh-flow-nav .divider {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  width: 22px;
  height: 2px;
  background-image: linear-gradient(to right, #9fbb58 33%, rgba(255, 255, 255, 0) 0%);
  background-position: bottom;
  background-size: 6px 2px;
  background-repeat: repeat-x;
}

.gh-flow-nav .current ~ .divider {
  background-image: linear-gradient(to right, #e3e3e3 33%, rgba(255, 255, 255, 0) 0%);
}

.gh-flow-nav .step {
  display: table-cell;
  width: 30px;
  height: 30px;
  border: transparent 2px solid;
  background: #9fbb58;
  border-radius: 100%;
  color: #fff;
  vertical-align: middle;
  text-align: center;
  text-align: center;
  font-size: 1.3rem;
}

.gh-flow-nav .step .num {
  display: none;
}

.gh-flow-nav .current ~ li:not(divider) .step {
  border: #e3e3e3 2px solid;
  background: transparent;
  color: #cdcdcd;
}

.gh-flow-nav .current ~ li:not(divider) .step .num {
  display: block;
}

.gh-flow-nav .current ~ li:not(divider) .step i {
  display: none;
}

.gh-flow-nav .current .step {
  border: #9fbb58 2px solid;
  background: transparent;
  color: #9fbb58;
  font-weight: bold;
  cursor: default;
}

.gh-flow-nav .current .step .num {
  display: block;
}

.gh-flow-nav .current .step i {
  display: none;
}

.gh-flow-nav .done {
  border: none;
  background: #9fbb58;
  color: #fff;
}

.gh-flow-content {
  max-width: 700px;
  width: 100%;
  color: #7d878a;
  text-align: center;
  font-size: 1.9rem;
  line-height: 1.5em;
  font-weight: 100;
}

@media (max-width: 500px) {
  .gh-flow-content {
    font-size: 4vw;
  }
}

.gh-flow-content header {
  margin: 0 auto;
  max-width: 520px;
}

.gh-flow-content h1 {
  letter-spacing: -1px;
  font-size: 4.2rem;
  font-weight: 100;
}

@media (max-width: 600px) {
  .gh-flow-content h1 {
    font-size: 7vw;
  }
}

.gh-flow-content strong {
  font-weight: 400;
}

.gh-flow-content em {
  color: #5ba4e5;
  font-weight: 400;
  font-style: normal;
}

.gh-flow-content img {
  max-width: 100%;
}

.gh-flow-content .gh-flow-screenshot {
  position: relative;
  left: -38px;
}

@media (max-width: 860px) {
  .gh-flow-content .gh-flow-screenshot {
    left: 0;
  }
}

.gh-flow-content .btn {
  display: block;
  margin: 20px auto 0;
  max-width: 400px;
}

.gh-flow-content .gh-flow-create {
  position: relative;
  margin: 70px auto 30px;
  padding: 50px 40px 25px;
  max-width: 400px;
  border: #dae1e3 1px solid;
  background: #f8fbfd;
  border-radius: 5px;
  text-align: left;
}

.gh-flow-content .account-image {
  position: absolute;
  top: -50px;
  left: 50%;
  overflow: hidden;
  margin: 0;
  margin-left: -50px;
  padding: 4px;
  width: 100px;
  height: 100px;
  border: #d1d9db 1px solid;
  background: #fff;
  border-radius: 100%;
  text-align: center;
}

.gh-flow-content .account-image:hover .edit-account-image {
  opacity: 1;
}

.gh-flow-content .edit-account-image {
  position: absolute;
  top: 4px;
  right: 4px;
  bottom: 4px;
  left: 4px;
  width: calc(100% - 8px);
  background: rgba(87, 163, 232, 0.7);
  border-radius: 100%;
  color: #fff;
  text-decoration: none;
  text-transform: uppercase;
  font-size: 3rem;
  line-height: 90px;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.gh-flow-content .img {
  display: block;
  width: 90px;
  height: 90px;
  background-color: #f8fbfd;
  background-position: center center;
  background-size: cover;
  border-radius: 100%;
  -webkit-animation: fade-in 1s;
  animation: fade-in 1s;
}

.gh-flow-content .form-group {
  margin-bottom: 2.5rem;
}

.gh-flow-content .form-group label {
  margin: 0;
  font-size: 1.4rem;
  font-weight: 400;
}

.gh-flow-content .form-group a {
  text-decoration: underline;
}

.gh-flow-content input {
  padding: 10px;
  border: #dae1e3 1px solid;
  font-size: 1.6rem;
  line-height: 1.4em;
  font-weight: 100;
}

.gh-flow-content .pw-strength {
  position: absolute;
  top: 50%;
  right: 1px;
  margin-top: -11px;
  padding: 0 10px;
  height: 24px;
  background: rgba(255, 255, 255, 0.9);
}

.gh-flow-content .pw-strength-dot {
  display: block;
  margin-top: 2px;
  width: 3px;
  height: 3px;
  background-color: #d9e0e3;
  border-radius: 100%;
}

.gh-flow-content .pw-strength-dot:first-child {
  margin-top: 0;
}

.gh-flow-content .pw-strength-activedot {
  background-color: #e25440;
}

.gh-flow-content .input-icon[class*="icon-"]:before {
  -webkit-transform: translateY(-49%);
  transform: translateY(-49%);
}

.gh-flow-content .gh-flow-invite {
  margin: 0 auto;
  max-width: 400px;
  width: 100%;
  text-align: left;
}

@media (max-width: 460px) {
  .gh-flow-content .gh-flow-invite label i {
    display: none;
  }
}

.gh-flow-content .gh-flow-faces {
  margin-bottom: 3vw;
}

.gh-flow-content textarea {
  margin-bottom: 40px;
  width: 100%;
  height: 160px;
  font-size: 1.6rem;
  font-weight: 100;
}

@media (max-width: 1200px) {
  .gh-flow-content textarea {
    margin-bottom: 3vw;
  }
}

.gh-flow-content .response {
  position: absolute;
  right: 0;
  bottom: -25px;
  margin: 0;
  color: #a6b0b3;
  text-align: right;
  font-size: 1.2rem;
}

.gh-flow-content .success .input-icon:before {
  color: #9fbb58;
}

.error,
.error-content,
.main-error {
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}

.gh-flow-content .error input {
  border-color: #e25440;
}

.gh-flow-content .error .input-icon:before {
  color: #e25440;
}

.gh-flow-content .error .response {
  color: #e25440;
}

.gh-flow-content .main-error {
  margin-top: 5px;
  color: #e25440;
  font-size: 1.3rem;
}

/* Sign in
/* ---------------------------------------------------------- */

.gh-signin {
  position: relative;
  margin: 30px auto;
  padding: 40px;
  max-width: 400px;
  border: #dae1e3 1px solid;
  background: #f8fbfd;
  border-radius: 5px;
  text-align: left;
}

.gh-signin .form-group {
  margin-bottom: 1.5rem;
}

.gh-signin .btn {
  margin: 0;
  padding: 12px;
}

.forgotten-wrap {
  position: relative;
}

.forgotten-wrap .forgotten-link {
  position: absolute;
  top: 10px;
  right: 0;
  bottom: 10px;
  padding: 0 12px;
  border-left: #dae1e3 1px solid;
  border-radius: 0;
  text-transform: none;
  letter-spacing: 0;
}

.forgotten-link:hover {
  border-left: #dae1e3 1px solid;
  color: rgb(30, 115, 190);
  text-decoration: none;
}

.private-login h1 {
  margin-bottom: 2rem;
  text-indent: 0;
}

.private-login .form-group {
  margin: 0;
}

.private-login input[type="password"] {
  padding: 9px 7px;
  border-radius: 3px 3px 0 0;
}

.private-login-button {
  padding: 9px 1.8em;
  border-radius: 0 0 3px 3px;
}

/* Content /ghost/
/* ---------------------------------------------------------- */

/* Show/Hide on Mobile // TODO: What the fuck does that mean?
/* ---------------------------------------------------------- */

.content-list.show-menu {
  display: block;
}

.content-list.show-content {
  display: none;
}

.content-preview.show-menu {
  display: none;
}

.content-preview.show-content {
  display: block;
}

/* Content List (Left pane)
/* ---------------------------------------------------------- */

.content-list {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  padding: 15px;
  width: 33%;
  border-right: #e1e1e1 1px solid;
  background: #fff;
}

@media (max-width: 900px) {
  .content-list {
    right: 0;
    z-index: 500;
    width: auto;
    border: none;
  }
}

.content-list .content-list-content {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}

.content-list .entry-title {
  font-size: 1.6rem;
  line-height: 1.4em;
  font-weight: normal;
}

.content-list .entry-meta {
  margin-top: 14px;
  line-height: 18px;
}

.content-list .avatar {
  position: relative;
  float: left;
  margin-right: 14px;
  width: 18px;
  height: 18px;
  background-position: center center;
  background-size: cover;
  border-radius: 18px;
}

.content-list .avatar img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
}

.content-list .status,
.content-list .author {
  font-size: 1.3rem;
  font-weight: 300;
  transition: opacity 0.15s linear;
}

.content-list .avatar:hover + .author + .status {
  opacity: 0;
}

.content-list .avatar:hover + .author {
  opacity: 1;
}

.content-list .author {
  position: absolute;
  bottom: 22px;
  left: 56px;
  opacity: 0;
}

.content-list .status .draft {
  color: #e25440;
}

.content-list .status .scheduled {
  color: #f2a925;
}

.content-list ol {
  margin: 0;
  padding: 0;
  list-style: none;
}

.content-list li {
  position: relative;
  margin: 0;
  padding: 0;
  border-bottom: #e1e1e1 1px solid;
}

.content-list li a {
  display: block;
  padding: 19px 20px 22px 24px;
  color: rgba(0, 0, 0, 0.5);
}

.content-list li a:hover {
  text-decoration: none;
}

@media (max-width: 400px) {
  .content-list li a {
    padding: 15px;
  }
}

@media (max-width: 900px) {
  .content-list li a {
    padding-right: 40px;
  }
}

@media (min-width: 901px) {
  .content-list li a:after {
    display: none;
  }
}

@media (min-width: 901px) {
  .content-list .active {
    background: rgb(247, 247, 247);
  }
}

/* Preview (Right pane)
/* ---------------------------------------------------------- */

.content-preview {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  padding: 15px;
  width: 67%;
  background: #fff;
}

@media (max-width: 900px) {
  .content-preview {
    overflow: visible;
    width: 100%;
    border: none;
  }
}

.content-preview .unfeatured {
  margin: 0 7px 0 -5px;
  padding: 3px;
  vertical-align: -6%;
}

.content-preview .featured {
  margin: 0 7px 0 -5px;
  padding: 3px;
  vertical-align: -6%;
}

.content-preview .post-published-by .status a {
  color: inherit;
}

.content-preview .post-published-by .status a:hover {
  text-decoration: underline;
}

.content-preview .normal {
  margin: 0 3px;
  text-transform: none;
}

.content-preview .content-preview-content {
  padding: 5%;
  word-break: break-word;
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  hyphens: auto;
}

@media (max-width: 900px) {
  .content-preview .content-preview-content {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
  }
}

.content-preview .content-preview-content .wrapper {
  margin: 0 auto;
  max-width: 700px;
}

.content-preview .post-controls {
  position: relative;
  top: 3px;
  float: right;
}

.content-preview .post-settings-menu {
  position: absolute;
  top: 35px;
  right: -3px;
}

.content-preview img {
  width: 100%;
  height: auto;
}

.post-preview-header {
  display: block;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

/* Empty State
/* ---------------------------------------------------------- */

.no-posts-box {
  position: relative;
  z-index: 600;
  display: table;
  margin: 0 auto;
  padding: 0;
  height: 90%;
}

@media (max-width: 900px) {
  .no-posts-box {
    position: fixed;
    top: 45%;
    left: 50%;
  }
}

.no-posts-box .no-posts {
  display: table-cell;
  vertical-align: middle;
  text-align: center;
}

@media (max-width: 900px) {
  .no-posts-box .no-posts {
    position: relative;
    left: -50%;
    display: block;
  }
}

.no-posts-box .no-posts h3 {
  color: #aaa9a2;
  font-size: 2em;
  font-weight: 200;
}

/* Keyboard Focus Effects
/* ---------------------------------------------------------- */

/* This has to be a pseudo element to sit over the top of everything else in the content list */

.content-list.keyboard-focused:before {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 500;
  -webkit-animation: keyboard-focus-style-fade-out 1.5s 1 forwards;
  animation: keyboard-focus-style-fade-out 1.5s 1 forwards;
  pointer-events: none;
}

.content-preview.keyboard-focused {
  -webkit-animation: keyboard-focus-style-fade-out 1.5s 1 forwards;
  animation: keyboard-focus-style-fade-out 1.5s 1 forwards;
}

/* Editor /ghost/editor/
/* ---------------------------------------------------------- */

/* Title
/* ---------------------------------------------------------- */

.editor .entry-title {
  position: relative;
  padding: 0;
  height: 60px;
}

.editor .entry-title input {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 60px;
  border: 0;
  background: transparent;
  text-indent: 20px;
  letter-spacing: -1px;
  font-size: 3.2rem;
  font-weight: bold;
}

.editor .entry-title input:focus {
  outline: 0;
}

/* Container & Headers
/* ---------------------------------------------------------- */

@media (min-width: 401px) {
  .editor .notifications.bottom {
    bottom: 40px;
  }
}

.editor .entry-markdown {
  left: 0;
}

.editor .entry-preview {
  right: 0;
  border-left: #e1e1e1 1px solid;
}

.editor .entry-markdown,
.editor .entry-preview {
  position: absolute;
  top: 60px;
  bottom: 40px;
  padding: 15px;
  width: 50%;
  border-top: #e1e1e1 1px solid;
  background: #fff;
  /* Hide markdown icon + wordcount when we hit mobile */
  /* Give the tab with the .active class the highest z-index */
  /* Restore the normal height of the .active tab (inactive tab stays small, hidden behind) */
  /* Restore the white bg of the currently .active tab, remove hand cursor from currently active tab */
}

@media (max-width: 400px) {
  .editor .entry-markdown .markdown-help,
  .editor .entry-markdown .entry-word-count,
  .editor .entry-preview .markdown-help,
  .editor .entry-preview .entry-word-count {
    display: none;
  }
}

@media (max-width: 1000px) {
  .editor .entry-markdown,
  .editor .entry-preview {
    /* Convert all content areas to small boxes */
    top: 100px;
    right: 0;
    left: 0;
    z-index: 100;
    width: 100%;
    border: none;
    /* Correctly colour the markdown icon when inactive and hovered */
  }

  .editor .entry-markdown .markdown,
  .editor .entry-markdown .entry-preview-content,
  .editor .entry-preview .markdown,
  .editor .entry-preview .entry-preview-content {
    overflow: hidden;
    height: 50px;
  }

  .editor .entry-markdown:not(.active) .markdown-help:hover:before,
  .editor .entry-preview:not(.active) .markdown-help:hover:before {
    color: #fff;
  }
}

.editor .entry-markdown .floatingheader a,
.editor .entry-preview .floatingheader a {
  color: #aaa9a2;
}

@media (max-width: 1000px) {
  .editor .entry-markdown .floatingheader,
  .editor .entry-preview .floatingheader {
    position: absolute;
    top: -40px;
    left: 0;
    width: 50%;
    background: #aaa9a2;
    box-shadow: rgba(0, 0, 0, 0.1) 0 -2px 3px inset;
    color: #fff;
    font-weight: normal;
    cursor: pointer;
  }

  .editor .entry-markdown .floatingheader a,
  .editor .entry-preview .floatingheader a {
    color: #fff;
  }
}

.editor .entry-markdown .floatingheader .entry-word-count,
.editor .entry-preview .floatingheader .entry-word-count {
  position: relative;
  top: 2px;
  float: right;
}

.editor .entry-markdown.active,
.editor .entry-preview.active {
  z-index: 200;
}

.editor .entry-markdown.active .markdown,
.editor .entry-markdown.active .entry-preview-content,
.editor .entry-preview.active .markdown,
.editor .entry-preview.active .entry-preview-content {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  height: auto;
}

@media (max-width: 1000px) {
  .editor .entry-markdown.active header,
  .editor .entry-preview.active header {
    border-top: #e1e1e1 1px solid;
    background: #fff;
    box-shadow: none;
    color: #aaa9a2;
    cursor: auto;
  }

  .editor .entry-markdown.active header a,
  .editor .entry-preview.active header a {
    color: #aaa9a2;
  }
}

/* Editor (Left pane)
/* ---------------------------------------------------------- */

.editor .entry-markdown-content {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.editor .markdown-editor {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  max-width: 100%;
  height: 100%;
  border: 0;
  color: rgb(61, 64, 67);
  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
  font-size: 1.6rem;
  line-height: 2.5rem;
  resize: none;
}

.editor .markdown-editor:focus {
  outline: 0;
}

@media (max-width: 450px) {
  .editor .markdown-editor {
    padding: 15px;
  }
}

@media (min-width: 451px) and (max-width: 1000px) {
  .editor .markdown-editor {
    padding: 20px;
  }
}

@media (min-width: 1001px) {
  .editor .markdown-editor {
    padding: 42px 20px 36px 20px;
  }
}

@media (max-width: 1000px) {
  .editor .entry-preview .floatingheader {
    /* Align the tab of entry-preview on the right */
    right: 0;
    left: auto;
    border-right: none;
  }
}

.editor .entry-preview-content {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  padding: 40px 20px 37px 20px;
  word-break: break-word;
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  hyphens: auto;
  cursor: default;
}

@media (max-width: 400px) {
  .editor .entry-preview-content {
    padding: 15px;
  }
}

@media (max-width: 1000px) {
  .editor .scrolling .floatingheader {
    box-shadow: none;
  }

  .editor .scrolling .floatingheader:before,
  .editor .scrolling .floatingheader:after {
    display: none;
  }
}

@media (max-width: 1000px) and (max-width: 1000px) {
  .editor .entry-preview-content {
    box-shadow: 0 5px 5px rgba(0, 0, 0, 0.05) inset;
  }
}

.markdown-help {
  float: right;
  padding: 5px;
}

/* FFF: Fucking Firefox Fixes
/* ---------------------------------------------------------- */

@-moz-document url-prefix()  {
  .editor .markdown-editor {
    top: 40px;
    padding-top: 0;
    padding-bottom: 0;
    height: calc(100% - 40px);
  }
}

/* Preview (Right pane)
/* ---------------------------------------------------------- */

/* The styles for the actual content inside the preview */

.entry-preview-content,
.content-preview-content {
  font-size: 1.8rem;
  line-height: 1.5em;
  font-weight: 200;
}

.entry-preview-content *,
.content-preview-content * {
  -webkit-user-select: all;
  -moz-user-select: all;
  -ms-user-select: all;
  user-select: all;
}

.entry-preview-content a,
.content-preview-content a {
  color: #5ba4e5;
  text-decoration: underline;
}

.entry-preview-content sup a,
.content-preview-content sup a {
  text-decoration: none;
}

.entry-preview-content .btn,
.content-preview-content .btn {
  color: #242628;
  text-decoration: none;
}

.entry-preview-content .img-placeholder,
.content-preview-content .img-placeholder {
  position: relative;
  height: 100px;
  border: 5px dashed #242628;
}

.entry-preview-content .img-placeholder span,
.content-preview-content .img-placeholder span {
  position: absolute;
  top: 50%;
  display: block;
  margin-top: -15px;
  width: 100%;
  height: 30px;
  text-align: center;
}

.entry-preview-content a.image-edit,
.content-preview-content a.image-edit {
  width: 16px;
  height: 16px;
}

.entry-preview-content img,
.content-preview-content img {
  margin: 0 auto;
  max-width: 100%;
  height: auto;
}

/* Placeholder objects for <script> & <iframe> */

.js-embed-placeholder,
.iframe-embed-placeholder {
  padding: 100px 20px;
  border: none;
  background: #f9f9f9;
  text-align: center;
  font-family: "Open Sans", sans-serif;
  font-size: 1.6rem;
  font-weight: bold;
}

/* Zen Mode
/* ---------------------------------------------------------- */

body.zen {
  background: rgb(232, 232, 232);
}

body.zen .usermenu {
  display: none;
}

body.zen .global-nav,
body.zen .page-header,
body.zen #publish-bar {
  overflow: hidden;
  height: 0;
  opacity: 0;
  transition: all 0.5s ease-out;
}

body.zen .page-content {
  top: 0;
  transition: all 0.5s ease-out;
}

body.zen .entry-markdown,
body.zen .entry-preview {
  bottom: 0;
  transition: all 0.5s ease-out;
}

/* Publish Bar
/* ---------------------------------------------------------- */

#publish-bar {
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 900;
  padding: 0;
  height: 40px;
  border-top: #e1e1e1 1px solid;
  background: #fff;
  color: #7d878a;
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
}

@media (max-width: 1000px) {
  #publish-bar {
    font-weight: normal;
  }
}

#publish-bar .post-settings:hover,
#publish-bar .post-settings.active {
  color: #242628;
}

#publish-bar .post-settings-menu {
  position: absolute;
  right: -3px;
  bottom: 41px;
}

.extended-tags {
  /* When the tag bar is expanded */
  position: static;
  min-height: 100%;
}

.extended-tags #entry-tags:after {
  right: 10px;
}

.extended-tags .tags {
  width: 281px;
}

.extended-tags .tag-input {
  margin-top: 5px;
  padding-top: 5px;
  padding-left: 10px;
  width: 100%;
  border-top: 1px solid #242628;
}

.extended-tags .right {
  display: none;
}

#entry-tags input[type="text"].tag-input {
  display: inline-block;
  padding: 9px 9px 9px 0;
  width: 100%;
  border: none;
  background: transparent;
  color: #7d878a;
  vertical-align: top;
  line-height: 1;
  font-weight: 300;
}

#entry-tags input[type="text"].tag-input:focus {
  outline: none;
}

#entry-tags .tag {
  display: inline;
  margin-right: 3px;
  padding: 2px 5px;
  background: #242628;
  border-radius: 3px;
  color: #e2edf2;
  white-space: nowrap;
  font-size: 1.2rem;
  line-height: 1.2em;
}

#entry-tags .tag:hover {
  cursor: pointer;
}

#entry-tags .tag i {
  font-size: 0.7rem;
}

.suggestions {
  top: auto;
  bottom: calc(100% + 15px);
}

.suggestions li.selected,
.suggestions li.selected a {
  background: #5ba4e5;
  color: #fff;
  text-decoration: none;
}

.suggestions li.selected mark {
  color: #fff;
}

.suggestions mark {
  background: none;
  color: #000;
  font-weight: bold;
}

#entry-actions {
  position: relative;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  margin-right: 6px;
}

#entry-actions .dropdown {
  position: absolute;
  right: 0;
  bottom: 49px;
}

#entry-actions .dropdown .dropdown-menu {
  top: auto;
  right: 100%;
  bottom: 100%;
  left: auto;
}

#entry-actions.unsaved {
  padding-bottom: 0;
}

#entry-actions.unsaved .delete {
  display: none;
}

#entry-actions-menu {
  position: absolute;
  right: -5px;
  bottom: 50px;
}

.tags-wrapper {
  white-space: nowrap;
}

.tags-wrapper span {
  display: inline-block;
  margin-right: 10px;
}

.tag-label {
  position: relative;
  display: block;
  width: 40px;
  height: 40px;
}

.tag-label:before {
  position: absolute;
  top: 50%;
  left: 50%;
  color: #7d878a;
  font-size: 1.3rem;
  transition: color 0.15s linear;
  -webkit-transform: translateX(-50%) translateY(-50%);
  transform: translateX(-50%) translateY(-50%);
}

.tag-label:hover {
  cursor: pointer;
}

.publish-bar-inner {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-content: space-between;
  -ms-flex-line-pack: justify;
  align-content: space-between;
  width: 100%;
  height: 100%;
}

.publish-bar-tags-icon {
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
  min-width: 40px;
  max-width: 40px;
}

.publish-bar-tags {
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
  overflow-y: hidden;
  margin-right: 10px;
  height: 40px;
}

.publish-bar-tags .tags-wrapper {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  padding-top: 8px;
  padding-bottom: 9px;
  height: 70px;
  white-space: nowrap;
}

.publish-bar-tags-input {
  position: relative;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
}

.publish-bar-actions {
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  text-align: right;
}

.post-settings {
  position: relative;
  display: inline-block;
  padding: 8px 10px;
  color: #7d878a;
  transition: all 0.15s ease-out 0s;
}

.post-settings:hover,
.post-settings.active {
  color: #242628;
}

.post-settings-menu .dropdown-menu {
  top: auto;
  right: 100%;
  bottom: 100%;
  left: auto;
}

.post-view-link {
  position: absolute;
  top: 1px;
  right: 0;
  font-size: 1.3rem;
}

.post-view-link i {
  font-size: 10px;
}

/* Post settings meta
/* ---------------------------------------------------------- */

/* Google Imitation */

.seo-preview {
  font-family: Arial, sans-serif;
}

.seo-preview-title {
  color: #1e0fbe;
  text-overflow: ellipses;
  word-wrap: break-word;
  font-size: 1.8rem;
  line-height: 2.16rem;
  -webkit-text-overflow: ellipsis;
}

.seo-preview-link {
  margin: 1px 0 2px 0;
  color: #006621;
  word-wrap: break-word;
  font-size: 1.3rem;
  line-height: 1.6rem;
}

.seo-preview-description {
  color: #545454;
  word-wrap: break-word;
  font-size: 1.3rem;
  line-height: 1.4;
}

/* Markdown Help Modal
/* ---------------------------------------------------------- */

.modal-markdown-help-table {
  margin: 0 0 20px;
  width: 100%;
}

.modal-markdown-help-table td,
.modal-markdown-help-table th {
  padding: 8px 0;
}

.modal-markdown-help-table th {
  text-align: left;
}

/* Settings
/* ---------------------------------------------------------- */

/* Navigation
/* ---------------------------------------------------------- */

.navigation-item {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (max-width: 600px) {
  .navigation-item {
    position: relative;
    margin-bottom: 20px;
  }
}

@media (min-width: 601px) {
  .navigation-item {
    margin-bottom: 10px;
  }
}

.navigation-item:last-child {
  padding-left: 17px;
  /* simulate .navigation-item-drag-handle width + horizontal padding */
}

.navigation-item:last-child .navigation-item-drag-handle {
  display: none;
}

.navigation-item-drag-handle {
  padding: 6px 17px 0 0;
  width: 17px;
  cursor: move;
}

@media (max-width: 600px) {
  .navigation-item-drag-handle:before {
    position: absolute;
    top: 50%;
    left: 0;
    z-index: 20;
    margin-top: -9px;
  }
}

.navigation-inputs {
  width: 100%;
}

.navigation-item-url .fake-placeholder {
  color: lightgrey;
}

@media (max-width: 600px) {
  .navigation-item-label {
    margin-bottom: 5px;
  }

  .navigation-item-label,
  .navigation-item-url {
    display: block;
    width: 100%;
  }
}

@media (min-width: 601px) {
  .navigation-inputs {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }

  .navigation-item-label {
    -webkit-flex-grow: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
    margin-right: 10px;
  }

  .navigation-item-url {
    -webkit-flex-grow: 3;
    -ms-flex-positive: 3;
    flex-grow: 3;
  }
}

.navigation-item-action {
  position: relative;
  z-index: 10;
  padding-left: 10px;
  width: 40px;
}

.navigation-item-action button {
  position: absolute;
  top: 50%;
  margin-top: -2px;
  width: 30px;
  height: 30px;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
}

.navigation-item-action .icon-trash:before {
  color: #c0bfb6;
  font-size: 16px;
  transition: color 0.1s linear;
}

.navigation-item-action .icon-trash:hover:before {
  color: #e25440;
}

.navigation-item-action .icon-add:before {
  padding: 3px;
  background: #9fbb58;
  border-radius: 2px;
  color: #fff;
  font-size: 12px;
  transition: background 0.1s linear;
}

.navigation-item-action .icon-add:hover:before {
  background: rgb(133, 159, 65);
}

/* Code Injection
/* ---------------------------------------------------------- */

.settings-code {
  max-width: 700px;
}

.settings-code p {
  margin: 0 0 4px 0;
}

.settings-code code {
  vertical-align: middle;
}

.settings-code-editor {
  padding: 0;
  min-width: 250px;
  min-height: 300px;
  max-width: 680px;
  width: 100%;
  height: auto;
  border: 1px solid #e0dfd7;
  border-radius: 4px;
  line-height: 22px;
  transition: border-color 0.15s linear;
  -webkit-appearance: none;
}

.settings-code-editor.focused {
  outline: 0;
  border-color: #aaa9a2;
}

.settings-code-editor .CodeMirror {
  border-radius: inherit;
}

.settings-code-editor .cm-s-xq-light span.cm-meta {
  color: #000;
}

/* Labs
/* ---------------------------------------------------------- */

#startupload {
  line-height: inherit;
}

@media (max-width: 400px) {
  #startupload {
    margin-top: 5px;
  }
}

/* Users /ghost/settings/users/
/* ---------------------------------------------------------- */

.users-list-wrapper {
  overflow: auto;
  height: 100%;
}

/* User list
/* ---------------------------------------------------------- */

.invited-users {
  margin-bottom: 34px;
}

.user-list-title {
  margin-bottom: 14px;
  color: #c0bfb6;
  font-size: 13px;
  font-weight: normal;
}

.user-list-item {
  border-top: 1px solid #e1e1e1;
}

@media (max-width: 550px) {
  .user-list-item {
    display: block;
    padding: 15px 0;
  }
}

@media (min-width: 551px) {
  .user-list-item {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-justify-content: start;
    -ms-flex-pack: start;
    justify-content: start;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
    padding: 0 15px;
    height: 68px;
  }
}

/* Only apply these styles to anchor tags (pending invited are divs) */

a.user-list-item {
  text-decoration: none;
}

@media (min-width: 601px) {
  a.user-list-item:hover {
    background: rgb(250, 250, 250);
  }

  a.user-list-item:last-of-type:hover {
    box-shadow: inset 0 -1px 0 #e1e1e1;
  }
}

.user-list-item-icon {
  position: relative;
  display: block;
  overflow: hidden;
  width: 35px;
  height: 35px;
  background: #e1e1e1;
  border-radius: 100%;
  color: transparent;
  font-size: 0;
}

.user-list-item-icon:before {
  position: absolute;
  top: 50%;
  right: 0;
  left: 0;
  margin-top: -7px;
  color: #aaa9a2;
  text-align: center;
  font-size: 14px;
}

.user-list-item-figure {
  position: relative;
  display: block;
  width: 35px;
  height: 35px;
  background-position: center center;
  background-size: cover;
  border-radius: 35px;
}

.user-list-item-figure img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
}

@media (max-width: 550px) {
  .user-list-item-icon,
  .user-list-item-figure {
    float: left;
    margin-right: 15px;
  }
}

.user-list-item-body {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-align-items: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  padding-left: 15px;
  line-height: 1;
}

@media (max-width: 550px) {
  .user-list-item-body {
    margin-top: 3px;
  }
}

.user-list-item-body .name {
  display: inline-block;
  color: #242628;
  font-size: 15px;
  font-weight: 400;
}

.user-list-item-body .description {
  display: inline-block;
  margin-top: 3px;
  color: #c0bfb6;
  white-space: nowrap;
  font-size: 12px;
}

@media (max-width: 550px) {
  .user-list-item-aside {
    float: left;
    margin: 12px 0 0 50px;
    width: 100%;
  }
}

.user-list-item-aside .user-list-action:not(:first-of-type) {
  margin-left: 20px;
}

@media (min-width: 551px) {
  .user-list-item-aside .user-list-action:not(:first-of-type) {
    margin-left: 50px;
  }
}

.user-list-item-aside .role-label {
  float: left;
  margin-top: -1px;
}

.user-list-item-aside .role-label + .role-label {
  margin-left: 5px;
}

.user-list-action {
  text-decoration: underline;
  text-transform: uppercase;
  font-size: 11px;
}

/* Role Labels
/* ---------------------------------------------------------- */

.role-label {
  display: inline-block;
  padding: 6px 8px;
  background: #eee;
  color: rgba(0, 0, 0, 0.5);
  text-transform: uppercase;
  letter-spacing: 0.1em;
  font-size: 9px;
  line-height: 1;
  font-weight: 400;
}

.role-label.owner {
  background: #242628;
  color: rgba(255, 255, 255, 0.8);
}

.role-label.administrator {
  background: #e25440;
  color: rgba(255, 255, 255, 0.8);
}

.role-label.editor {
  background: #5ba4e5;
  color: rgba(255, 255, 255, 0.8);
}

/* User invitation modal
/* ---------------------------------------------------------- */

.invite-new-user .form-group {
  margin-bottom: 0;
  padding: 0;
}

.invite-new-user .form-group label {
  position: static;
  display: block;
  text-align: left;
}

.invite-new-user .form-group:nth-of-type(1) {
  float: left;
  width: 60%;
}

.invite-new-user .form-group:nth-of-type(2) {
  float: left;
  margin-left: 5%;
  width: 35%;
}

.invite-new-user .form-group input {
  width: 100%;
}

.invite-new-user .btn-green {
  width: 100%;
}

/* User profile /ghost/settings/users/<user>/
/* ---------------------------------------------------------- */

/* User actions menu
/* ---------------------------------------------------------- */

.user-actions-cog {
  margin-right: 10px;
  padding: 9px 11px;
}

.user-actions-menu {
  top: calc(100% + 17px);
  right: 0;
  left: auto;
}

.user-actions-menu.fade-out {
  -webkit-animation-duration: 0.01s;
  animation-duration: 0.01s;
}

/* Layout
/* ---------------------------------------------------------- */

.content.settings-user {
  padding: 0;
}

@media (min-width: 901px) {
  .content.settings-user {
    padding: 0 40px;
  }
}

.user-cover {
  position: relative;
  overflow: hidden;
  margin: 0;
  width: auto;
  height: 300px;
  background: #fafafa no-repeat center center;
  background-size: cover;
}

@media (max-width: 900px) {
  .user-cover {
    margin: 0;
  }
}

.user-cover:after {
  /* Gradient overlay */
  content: "";
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  height: 110px;
  background: linear-gradient(transparent, rgba(0, 0, 0, 0.18));
}

.user-cover-edit {
  position: absolute;
  right: 35px;
  bottom: 29px;
  z-index: 2;
  min-height: 37px;
  height: 37px;
  border-width: 0;
  background: rgba(0, 0, 0, 0.3);
  border-radius: 4px;
  color: rgba(255, 255, 255, 0.8);
  transition: color 0.3s ease, background 0.3s ease;
}

@media (max-width: 1000px) {
  .user-cover-edit {
    right: 15px;
  }
}

.user-cover-edit:hover {
  background: rgba(0, 0, 0, 0.5);
  color: #fff;
}

/* Edit user
/* ---------------------------------------------------------- */

.first-form-group {
  max-width: 500px;
}

@media (min-width: 651px) {
  .first-form-group {
    left: 40px;
    min-width: 285px;
  }
}

@media (min-width: 651px) and (max-width: 1000px) {
  .first-form-group {
    width: calc(100% - 201px);
  }
}

@media (min-width: 1001px) {
  .first-form-group {
    width: calc(100% - 181px);
  }
}

.user-details-top {
  position: relative;
}

@media (max-width: 650px) {
  .user-details-top {
    margin-top: 40px;
    margin-bottom: 0;
  }
}

@media (min-width: 651px) {
  .user-details-top {
    margin-top: -91px;
    margin-bottom: 0;
    padding: 0;
  }

  .user-details-top p {
    color: #fff;
  }

  .user-details-top label[for="user-name"] {
    color: transparent;
  }

  .user-details-top .user-name {
    border-color: #fff;
  }
}

@media (min-width: 901px) {
  .user-details-top .user-name {
    width: calc(100% - 20px);
  }
}

.user-profile {
  position: relative;
  z-index: 1;
}

@media (min-width: 651px) {
  .user-profile {
    padding-left: 143px;
  }
}

@media (max-width: 650px) {
  .user-profile fieldset {
    padding: 0 40px;
  }
}

@media (max-width: 550px) {
  .user-profile fieldset {
    padding: 0 15px;
  }
}

.user-profile textarea {
  min-width: 240px;
}

/* Profile picture
/* ---------------------------------------------------------- */

.user-image {
  position: absolute;
  z-index: 2;
  display: block;
  float: left;
  overflow: hidden;
  margin-right: 20px;
  margin-left: -6px;
  padding: 3px;
  width: 126px;
  height: 126px;
  background: #fff;
  border-radius: 100%;
  text-align: center;
}

@media (min-width: 651px) {
  .user-image {
    top: -19px;
    left: -98px;
  }
}

@media (max-width: 650px) {
  .user-image {
    top: -159px;
    left: 21px;
  }
}

.user-image .img {
  display: block;
  width: 120px;
  height: 120px;
  background-position: center center;
  background-size: cover;
  border-radius: 100%;
}

.user-image:hover .edit-user-image {
  opacity: 1;
}

.edit-user-image {
  position: absolute;
  top: 3px;
  right: 3px;
  bottom: 3px;
  left: 3px;
  width: calc(100% - 6px);
  background: rgba(0, 0, 0, 0.5);
  border-radius: 100%;
  color: #fff;
  text-decoration: none;
  text-transform: uppercase;
  line-height: 120px;
  opacity: 0;
  transition: opacity 0.3s ease;
}

/* About /ghost/settings/about/
/* ---------------------------------------------------------- */

.gh-logo {
  position: relative;
  width: 120px;
  height: auto;
}

.gh-env-details {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  margin: 1em 0;
}

.gh-env-list {
  margin: 0;
  padding: 0 40px 0 0;
  list-style: none;
}

.gh-env-help {
  max-width: 200px;
}

.gh-env-help .btn {
  margin: 5px 0;
}

@media (max-width: 670px) {
  .gh-env-details {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
  }

  .gh-env-help {
    margin: 1em 0;
    max-width: none;
  }
}

.gh-credits {
  margin: 2em 0;
  max-width: 650px;
  color: #7d878a;
  font-size: 1.8rem;
  font-weight: 200;
}

@media (max-width: 890px) {
  .gh-credits {
    max-width: 460px;
  }
}

.gh-credits h2 {
  font-size: 2.4rem;
}

/* Contributors
/* ---------------------------------------------------------- */

.gh-contributors {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 1em 0;
}

.gh-contributors a {
  position: relative;
  display: block;
  margin: 0 10px 10px 0;
  width: 60px;
  height: 60px;
}

.gh-contributors img {
  border-radius: 100%;
}

.gh-contributors a:before {
  content: attr(title);
  position: absolute;
  top: -20px;
  left: 50%;
  padding: 2px 6px;
  background: #242628;
  border-radius: 4px;
  color: #fff;
  font-size: 1rem;
  line-height: 1.3em;
  opacity: 0;
  transition: opacity 0.15s ease-in-out;
  -webkit-transform: translateX(-50%);
  transform: translateX(-50%);
  pointer-events: none;
}

.gh-contributors a:after {
  content: "";
  position: absolute;
  top: -6px;
  left: 50%;
  opacity: 0;
  transition: opacity 0.15s ease-in-out;
  -webkit-transform: translateX(-50%);
  transform: translateX(-50%);
}

.gh-contributors a:hover:before,
.gh-contributors a:hover:after {
  opacity: 1;
}

/* Copyright Info
/* ---------------------------------------------------------- */

.gh-copyright-info {
  color: #7d878a;
  font-size: 1.2rem;
}

/* Tag Management /ghost/settings/tags/
/* ---------------------------------------------------------- */

/* Search
/* ---------------------------------------------------------- */

.tags-search {
  position: relative;
  display: inline-block;
  margin-left: 7px;
}

.tags-search .btn {
  position: relative;
  padding-right: 10px;
  padding-left: 10px;
  transition: padding 0.3s ease-in-out;
}

.tags-search .btn.active {
  box-shadow: none;
}

.tags-search .btn .icon-search:before {
  font-size: 1.3rem;
}

.tags-search .tags-search-input {
  position: absolute;
  top: 1px;
  left: 1px;
  margin: 0;
  padding: 7px 10px;
  width: 0;
  border: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  opacity: 0;
  transition: all 0.3s ease-in-out;
  pointer-events: none;
}

@media (max-width: 400px) {
  .tags-search.opened .btn {
    padding-left: 120px;
  }

  .tags-search.opened .tags-search-input {
    width: 110px;
  }
}

@media (min-width: 401px) {
  .tags-search.opened .btn {
    padding-left: 140px;
  }

  .tags-search.opened .tags-search-input {
    width: 130px;
  }
}

.tags-search.opened .tags-search-input {
  opacity: 1;
  pointer-events: auto;
}

/* Tag
/* ---------------------------------------------------------- */

.settings-tag {
  position: relative;
  display: block;
  padding: 0 45px 0 0;
  border-bottom: 1px solid #e1e1e1;
}

.settings-tag .tag-edit-button {
  padding: 20px;
  width: calc(100% + 45px);
  text-align: left;
}

.settings-tag .tag-edit-button:hover,
.settings-tag .tag-edit-button:focus,
.settings-tag .tag-edit-button:active {
  background: rgb(250, 250, 250);
}

.settings-tag:last-of-type:hover .tag-edit-button {
  box-shadow: inset 0 -1px 0 #e1e1e1;
}

.settings-tag .label {
  position: relative;
  top: -2px;
  margin-left: 2px;
}

.settings-tag .label-alt {
  text-transform: uppercase;
}

.settings-tag .tag-title {
  color: #242628;
  font-size: 16px;
  font-weight: normal;
}

.settings-tag .tag-description {
  margin: 0;
  color: #c0bfb6;
  font-size: 13px;
}

.settings-tag .tags-count {
  position: absolute;
  top: 20px;
  right: 12px;
  color: #c0bfb6;
  font-size: 16px;
}

/* Error /ghost/404/
/* ---------------------------------------------------------- */

.error-content {
  display: table;
  margin: 0 auto;
  padding: 0;
  max-width: 530px;
  height: 100%;
}

.error-content {
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}

@media (max-width: 630px) {
  .error-content {
    max-width: 264px;
    text-align: center;
  }
}

.error-details {
  display: table-cell;
  vertical-align: middle;
}

.error-image {
  display: inline-block;
  width: 96px;
  height: 150px;
  vertical-align: middle;
}

@media (max-width: 630px) {
  .error-image {
    width: 72px;
    height: 112px;
  }
}

.error-image img {
  width: 100%;
  height: 100%;
}

.error-message {
  position: relative;
  top: -5px;
  display: inline-block;
  margin-left: 10px;
  vertical-align: middle;
}

.error-code {
  margin: 0;
  color: #979797;
  font-size: 7.8em;
  line-height: 0.9em;
}

@media (max-width: 630px) {
  .error-code {
    font-size: 5.8em;
  }
}

.error-description {
  margin: 0;
  padding: 0;
  border: none;
  color: #979797;
  font-size: 1.9em;
  font-weight: 300;
}

@media (max-width: 630px) {
  .error-description {
    font-size: 1.4em;
  }
}

/* Stack trace
/* ---------------------------------------------------------- */

.error-stack {
  margin: 1em auto;
  padding: 2em;
  max-width: 800px;
  background-color: rgba(255, 255, 255, 0.3);
}

.error-stack-list {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.error-stack-list li {
  display: block;
}

.error-stack-list li:before {
  content: "\21AA";
  display: inline-block;
  margin-right: 0.5em;
  color: #bbb;
  font-size: 1.2em;
}

.error-stack-function {
  font-weight: bold;
}


/*# sourceMappingURL=data:application/json;base64, */